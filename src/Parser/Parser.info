-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Parser/Parser.y
-----------------------------------------------------------------------------

state 9 contains 3 shift/reduce conflicts.
state 82 contains 4 shift/reduce conflicts.
state 92 contains 3 shift/reduce conflicts.

terminal '.' is unused
terminal '|' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseModule -> Module                       (0)
	%start_parseTheorems -> Theorems                   (1)
	%start_parseFormula -> Formula                     (2)
	%start_parse -> Module                             (3)
	Module -> 'module' ModuleName ConstantsD Aliases Axioms Theorems   (4)
	ModuleName -> IDENT                                (5)
	ConstantsD -> 'constants' ':' Consts               (6)
	ConstantsD ->                                      (7)
	Aliases -> 'aliases' ':' Alis                      (8)
	Aliases ->                                         (9)
	Alis -> Alias                                      (10)
	Alis -> Alias ',' Alis                             (11)
	Alias -> Ali '=' Term                              (12)
	Ali -> IDENT                                       (13)
	Consts -> IDENT                                    (14)
	Consts -> IDENT ',' Consts                         (15)
	Axioms -> 'axioms' ':' Axs                         (16)
	Axioms ->                                          (17)
	Axs -> Formula                                     (18)
	Axs -> Formula ',' Axs                             (19)
	Theorems -> Theorem Theorems                       (20)
	Theorems ->                                        (21)
	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion Proof   (22)
	Theorem -> 'theorem' IDENT ':' Formula Proof       (23)
	Assumptions -> Formula AssumpsRest                 (24)
	Assumptions ->                                     (25)
	AssumpsRest -> ',' Formula AssumpsRest             (26)
	AssumpsRest ->                                     (27)
	Conclusion -> Formula                              (28)
	Formula -> '⊤'                                     (29)
	Formula -> '⊥'                                     (30)
	Formula -> Relation                                (31)
	Formula -> '¬' Formula                             (32)
	Formula -> Formula '∧' Formula                     (33)
	Formula -> Formula '∨' Formula                     (34)
	Formula -> Formula '==>' Formula                   (35)
	Formula -> Formula '<=>' Formula                   (36)
	Formula -> '∀' B Binders ':' QFormula              (37)
	Formula -> '∃' B Binders ':' QFormula              (38)
	Formula -> '(' Formula ')'                         (39)
	Formula -> '{' Formula '}'                         (40)
	Formula -> '[' Formula ']'                         (41)
	B ->                                               (42)
	Binders ->                                         (43)
	Binders -> IDENT Binders                           (44)
	QFormula -> Formula                                (45)
	Relation -> IDENT TermArgsM                        (46)
	TermArgsM -> '(' TArgsSep ')'                      (47)
	TermArgsM -> '[' TArgsSep ']'                      (48)
	TermArgsM -> '{' TArgsSep '}'                      (49)
	TermArgsM ->                                       (50)
	TArgsSep -> Term                                   (51)
	TArgsSep -> Term ',' TArgsSep                      (52)
	TArgsSep ->                                        (53)
	Term -> IDENT 'ᶜ' TermArgsM                        (54)
	Term -> IDENT TermArgsM                            (55)
	Term -> '(' Term ')'                               (56)
	Proof -> Subproof Proof                            (57)
	Proof -> Claim Proof                               (58)
	Proof ->                                           (59)
	Subproof -> SubProofAux                            (60)
	Subproof -> Name ':' SubProofAux                   (61)
	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof END_LAYOUT   (62)
	Assumption -> ForAll Universals                    (63)
	Assumption -> AssumedFormulae                      (64)
	Assumption -> AssumedFormula 'for' 'some' Constants   (65)
	ForAll -> 'all'                                    (66)
	ForAll -> 'for' 'all'                              (67)
	AssumedFormula -> Name ':' Formula                 (68)
	AssumedFormula -> Formula                          (69)
	AssumedFormulae -> AssumedFormula AssumedFormulae   (70)
	AssumedFormulae -> AssumedFormula                  (71)
	Universals -> IDENT                                (72)
	Universals -> IDENT ',' Universals                 (73)
	Constants -> IDENT                                 (74)
	Constants -> IDENT ',' Constants                   (75)
	Claim -> Name ':' Formula Just                     (76)
	Claim -> Formula Just                              (77)
	Name -> IDENT                                      (78)
	Name -> '_'                                        (79)
	Just -> 'by' 'rule' RuleKind OnIdents              (80)
	Just -> 'by' 'induction' OnIdents                  (81)
	Just -> 'by' 'unproved'                            (82)
	Just -> 'by' 'theorem' IDENT OnIdents              (83)
	RuleKind -> IDENT                                  (84)
	OnIdents -> 'on' Idents                            (85)
	OnIdents ->                                        (86)
	Idents -> IDENT                                    (87)
	Idents -> IDENT ',' IdentsAux                      (88)
	IdentsAux -> IDENT ',' IdentsAux                   (89)
	IdentsAux -> IDENT                                 (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	IDENT          { Token.Ident $$ }
	'ᶜ'            { Token.Constant'Before }
	'module'       { Token.Module }
	','            { Token.Comma }
	'.'            { Token.Period }
	'theorem'      { Token.Theorem }
	'constants'    { Token.Constants }
	'axioms'       { Token.Axioms }
	'aliases'      { Token.Aliases }
	'by'           { Token.By }
	'rule'         { Token.Rule }
	'induction'    { Token.Induction }
	'on'           { Token.On }
	'for'          { Token.For }
	'all'          { Token.All }
	'some'         { Token.Some }
	'unproved'     { Token.Unproved }
	':'            { Token.Colon }
	'⊢'            { Token.Turnstile }
	'⊤'            { Token.Tautology }
	'⊥'            { Token.Contradiction }
	'∀'            { Token.Forall }
	'∃'            { Token.Exists }
	'¬'            { Token.Negate }
	'∧'            { Token.And }
	'∨'            { Token.Or }
	'==>'          { Token.Implication }
	'<=>'          { Token.Equivalence }
	'('            { Token.Paren'Open }
	')'            { Token.Paren'Close }
	'['            { Token.Box'Open }
	']'            { Token.Box'Close }
	'{'            { Token.Bracket'Open }
	'}'            { Token.Bracket'Close }
	'_'            { Token.Underscore }
	'='            { Token.Equal }
	'|'            { Token.Pipe }
	'---'          { Token.Dash }
	BEGIN_LAYOUT   { Token.Begin'Layout }
	END_LAYOUT     { Token.End'Layout }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseModule rule  0
	%start_parseTheorems rule  1
	%start_parseFormula rule  2
	%start_parse    rule  3
	Module          rule  4
	ModuleName      rule  5
	ConstantsD      rules 6, 7
	Aliases         rules 8, 9
	Alis            rules 10, 11
	Alias           rule  12
	Ali             rule  13
	Consts          rules 14, 15
	Axioms          rules 16, 17
	Axs             rules 18, 19
	Theorems        rules 20, 21
	Theorem         rules 22, 23
	Assumptions     rules 24, 25
	AssumpsRest     rules 26, 27
	Conclusion      rule  28
	Formula         rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
	B               rule  42
	Binders         rules 43, 44
	QFormula        rule  45
	Relation        rule  46
	TermArgsM       rules 47, 48, 49, 50
	TArgsSep        rules 51, 52, 53
	Term            rules 54, 55, 56
	Proof           rules 57, 58, 59
	Subproof        rules 60, 61
	SubProofAux     rule  62
	Assumption      rules 63, 64, 65
	ForAll          rules 66, 67
	AssumedFormula  rules 68, 69
	AssumedFormulae rules 70, 71
	Universals      rules 72, 73
	Constants       rules 74, 75
	Claim           rules 76, 77
	Name            rules 78, 79
	Just            rules 80, 81, 82, 83
	RuleKind        rule  84
	OnIdents        rules 85, 86
	Idents          rules 87, 88
	IdentsAux       rules 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseModule -> . Module                      (rule 0)

	'module'       shift, and enter state 5

	Module         goto state 21

State 1

	%start_parseTheorems -> . Theorems                  (rule 1)

	'theorem'      shift, and enter state 20
	%eof           reduce using rule 21

	Theorems       goto state 18
	Theorem        goto state 19

State 2

	%start_parseFormula -> . Formula                    (rule 2)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 7
	Relation       goto state 8

State 3

	%start_parse -> . Module                            (rule 3)

	'module'       shift, and enter state 5

	Module         goto state 6

State 4

	Module -> . 'module' ModuleName ConstantsD Aliases Axioms Theorems    (rule 4)

	'module'       shift, and enter state 5


State 5

	Module -> 'module' . ModuleName ConstantsD Aliases Axioms Theorems    (rule 4)

	IDENT          shift, and enter state 39

	ModuleName     goto state 38

State 6

	%start_parse -> Module .                            (rule 3)

	%eof           accept


State 7

	%start_parseFormula -> Formula .                    (rule 2)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	%eof           accept


State 8

	Formula -> Relation .                               (rule 31)

	IDENT          reduce using rule 31
	','            reduce using rule 31
	'theorem'      reduce using rule 31
	'by'           reduce using rule 31
	'for'          reduce using rule 31
	'⊢'            reduce using rule 31
	'⊤'            reduce using rule 31
	'⊥'            reduce using rule 31
	'∀'            reduce using rule 31
	'∃'            reduce using rule 31
	'¬'            reduce using rule 31
	'∧'            reduce using rule 31
	'∨'            reduce using rule 31
	'==>'          reduce using rule 31
	'<=>'          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'_'            reduce using rule 31
	'---'          reduce using rule 31
	BEGIN_LAYOUT   reduce using rule 31
	%eof           reduce using rule 31


State 9

	Relation -> IDENT . TermArgsM                       (rule 46)

	IDENT          reduce using rule 50
	','            reduce using rule 50
	'theorem'      reduce using rule 50
	'by'           reduce using rule 50
	'for'          reduce using rule 50
	'⊢'            reduce using rule 50
	'⊤'            reduce using rule 50
	'⊥'            reduce using rule 50
	'∀'            reduce using rule 50
	'∃'            reduce using rule 50
	'¬'            reduce using rule 50
	'∧'            reduce using rule 50
	'∨'            reduce using rule 50
	'==>'          reduce using rule 50
	'<=>'          reduce using rule 50
	'('            shift, and enter state 31
			(reduce using rule 50)

	')'            reduce using rule 50
	'['            shift, and enter state 32
			(reduce using rule 50)

	']'            reduce using rule 50
	'{'            shift, and enter state 33
			(reduce using rule 50)

	'}'            reduce using rule 50
	'_'            reduce using rule 50
	'---'          reduce using rule 50
	BEGIN_LAYOUT   reduce using rule 50
	%eof           reduce using rule 50

	TermArgsM      goto state 30

State 10

	Formula -> '⊤' .                                    (rule 29)

	IDENT          reduce using rule 29
	','            reduce using rule 29
	'theorem'      reduce using rule 29
	'by'           reduce using rule 29
	'for'          reduce using rule 29
	'⊢'            reduce using rule 29
	'⊤'            reduce using rule 29
	'⊥'            reduce using rule 29
	'∀'            reduce using rule 29
	'∃'            reduce using rule 29
	'¬'            reduce using rule 29
	'∧'            reduce using rule 29
	'∨'            reduce using rule 29
	'==>'          reduce using rule 29
	'<=>'          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'_'            reduce using rule 29
	'---'          reduce using rule 29
	BEGIN_LAYOUT   reduce using rule 29
	%eof           reduce using rule 29


State 11

	Formula -> '⊥' .                                    (rule 30)

	IDENT          reduce using rule 30
	','            reduce using rule 30
	'theorem'      reduce using rule 30
	'by'           reduce using rule 30
	'for'          reduce using rule 30
	'⊢'            reduce using rule 30
	'⊤'            reduce using rule 30
	'⊥'            reduce using rule 30
	'∀'            reduce using rule 30
	'∃'            reduce using rule 30
	'¬'            reduce using rule 30
	'∧'            reduce using rule 30
	'∨'            reduce using rule 30
	'==>'          reduce using rule 30
	'<=>'          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'_'            reduce using rule 30
	'---'          reduce using rule 30
	BEGIN_LAYOUT   reduce using rule 30
	%eof           reduce using rule 30


State 12

	Formula -> '∀' . B Binders ':' QFormula             (rule 37)

	IDENT          reduce using rule 42
	':'            reduce using rule 42

	B              goto state 29

State 13

	Formula -> '∃' . B Binders ':' QFormula             (rule 38)

	IDENT          reduce using rule 42
	':'            reduce using rule 42

	B              goto state 28

State 14

	Formula -> '¬' . Formula                            (rule 32)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 27
	Relation       goto state 8

State 15

	Formula -> '(' . Formula ')'                        (rule 39)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 26
	Relation       goto state 8

State 16

	Formula -> '[' . Formula ']'                        (rule 41)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 25
	Relation       goto state 8

State 17

	Formula -> '{' . Formula '}'                        (rule 40)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 24
	Relation       goto state 8

State 18

	%start_parseTheorems -> Theorems .                  (rule 1)

	%eof           accept


State 19

	Theorems -> Theorem . Theorems                      (rule 20)

	'theorem'      shift, and enter state 20
	%eof           reduce using rule 21

	Theorems       goto state 23
	Theorem        goto state 19

State 20

	Theorem -> 'theorem' . IDENT ':' Assumptions '⊢' Conclusion Proof    (rule 22)
	Theorem -> 'theorem' . IDENT ':' Formula Proof      (rule 23)

	IDENT          shift, and enter state 22


State 21

	%start_parseModule -> Module .                      (rule 0)

	%eof           accept


State 22

	Theorem -> 'theorem' IDENT . ':' Assumptions '⊢' Conclusion Proof    (rule 22)
	Theorem -> 'theorem' IDENT . ':' Formula Proof      (rule 23)

	':'            shift, and enter state 58


State 23

	Theorems -> Theorem Theorems .                      (rule 20)

	%eof           reduce using rule 20


State 24

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Formula -> '{' Formula . '}'                        (rule 40)

	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'}'            shift, and enter state 57


State 25

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Formula -> '[' Formula . ']'                        (rule 41)

	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	']'            shift, and enter state 56


State 26

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Formula -> '(' Formula . ')'                        (rule 39)

	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	')'            shift, and enter state 55


State 27

	Formula -> '¬' Formula .                            (rule 32)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          reduce using rule 32
	','            reduce using rule 32
	'theorem'      reduce using rule 32
	'by'           reduce using rule 32
	'for'          reduce using rule 32
	'⊢'            reduce using rule 32
	'⊤'            reduce using rule 32
	'⊥'            reduce using rule 32
	'∀'            reduce using rule 32
	'∃'            reduce using rule 32
	'¬'            reduce using rule 32
	'∧'            reduce using rule 32
	'∨'            reduce using rule 32
	'==>'          reduce using rule 32
	'<=>'          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'_'            reduce using rule 32
	'---'          reduce using rule 32
	BEGIN_LAYOUT   reduce using rule 32
	%eof           reduce using rule 32


State 28

	Formula -> '∃' B . Binders ':' QFormula             (rule 38)

	IDENT          shift, and enter state 53
	':'            reduce using rule 43

	Binders        goto state 54

State 29

	Formula -> '∀' B . Binders ':' QFormula             (rule 37)

	IDENT          shift, and enter state 53
	':'            reduce using rule 43

	Binders        goto state 52

State 30

	Relation -> IDENT TermArgsM .                       (rule 46)

	IDENT          reduce using rule 46
	','            reduce using rule 46
	'theorem'      reduce using rule 46
	'by'           reduce using rule 46
	'for'          reduce using rule 46
	'⊢'            reduce using rule 46
	'⊤'            reduce using rule 46
	'⊥'            reduce using rule 46
	'∀'            reduce using rule 46
	'∃'            reduce using rule 46
	'¬'            reduce using rule 46
	'∧'            reduce using rule 46
	'∨'            reduce using rule 46
	'==>'          reduce using rule 46
	'<=>'          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	'_'            reduce using rule 46
	'---'          reduce using rule 46
	BEGIN_LAYOUT   reduce using rule 46
	%eof           reduce using rule 46


State 31

	TermArgsM -> '(' . TArgsSep ')'                     (rule 47)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 53

	TArgsSep       goto state 51
	Term           goto state 47

State 32

	TermArgsM -> '[' . TArgsSep ']'                     (rule 48)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49
	']'            reduce using rule 53

	TArgsSep       goto state 50
	Term           goto state 47

State 33

	TermArgsM -> '{' . TArgsSep '}'                     (rule 49)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49
	'}'            reduce using rule 53

	TArgsSep       goto state 46
	Term           goto state 47

State 34

	Formula -> Formula '∧' . Formula                    (rule 33)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 45
	Relation       goto state 8

State 35

	Formula -> Formula '∨' . Formula                    (rule 34)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 44
	Relation       goto state 8

State 36

	Formula -> Formula '==>' . Formula                  (rule 35)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 43
	Relation       goto state 8

State 37

	Formula -> Formula '<=>' . Formula                  (rule 36)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 42
	Relation       goto state 8

State 38

	Module -> 'module' ModuleName . ConstantsD Aliases Axioms Theorems    (rule 4)

	'theorem'      reduce using rule 7
	'constants'    shift, and enter state 41
	'axioms'       reduce using rule 7
	'aliases'      reduce using rule 7
	%eof           reduce using rule 7

	ConstantsD     goto state 40

State 39

	ModuleName -> IDENT .                               (rule 5)

	'theorem'      reduce using rule 5
	'constants'    reduce using rule 5
	'axioms'       reduce using rule 5
	'aliases'      reduce using rule 5
	%eof           reduce using rule 5


State 40

	Module -> 'module' ModuleName ConstantsD . Aliases Axioms Theorems    (rule 4)

	'theorem'      reduce using rule 9
	'axioms'       reduce using rule 9
	'aliases'      shift, and enter state 73
	%eof           reduce using rule 9

	Aliases        goto state 72

State 41

	ConstantsD -> 'constants' . ':' Consts              (rule 6)

	':'            shift, and enter state 71


State 42

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Formula -> Formula '<=>' Formula .                  (rule 36)

	IDENT          reduce using rule 36
	','            reduce using rule 36
	'theorem'      reduce using rule 36
	'by'           reduce using rule 36
	'for'          reduce using rule 36
	'⊢'            reduce using rule 36
	'⊤'            reduce using rule 36
	'⊥'            reduce using rule 36
	'∀'            reduce using rule 36
	'∃'            reduce using rule 36
	'¬'            reduce using rule 36
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'_'            reduce using rule 36
	'---'          reduce using rule 36
	BEGIN_LAYOUT   reduce using rule 36
	%eof           reduce using rule 36


State 43

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula '==>' Formula .                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          reduce using rule 35
	','            reduce using rule 35
	'theorem'      reduce using rule 35
	'by'           reduce using rule 35
	'for'          reduce using rule 35
	'⊢'            reduce using rule 35
	'⊤'            reduce using rule 35
	'⊥'            reduce using rule 35
	'∀'            reduce using rule 35
	'∃'            reduce using rule 35
	'¬'            reduce using rule 35
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'_'            reduce using rule 35
	'---'          reduce using rule 35
	BEGIN_LAYOUT   reduce using rule 35
	%eof           reduce using rule 35


State 44

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula '∨' Formula .                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          reduce using rule 34
	','            reduce using rule 34
	'theorem'      reduce using rule 34
	'by'           reduce using rule 34
	'for'          reduce using rule 34
	'⊢'            reduce using rule 34
	'⊤'            reduce using rule 34
	'⊥'            reduce using rule 34
	'∀'            reduce using rule 34
	'∃'            reduce using rule 34
	'¬'            reduce using rule 34
	'∧'            shift, and enter state 34
	'∨'            reduce using rule 34
	'==>'          reduce using rule 34
	'<=>'          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'_'            reduce using rule 34
	'---'          reduce using rule 34
	BEGIN_LAYOUT   reduce using rule 34
	%eof           reduce using rule 34


State 45

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula '∧' Formula .                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          reduce using rule 33
	','            reduce using rule 33
	'theorem'      reduce using rule 33
	'by'           reduce using rule 33
	'for'          reduce using rule 33
	'⊢'            reduce using rule 33
	'⊤'            reduce using rule 33
	'⊥'            reduce using rule 33
	'∀'            reduce using rule 33
	'∃'            reduce using rule 33
	'¬'            reduce using rule 33
	'∧'            reduce using rule 33
	'∨'            reduce using rule 33
	'==>'          reduce using rule 33
	'<=>'          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'_'            reduce using rule 33
	'---'          reduce using rule 33
	BEGIN_LAYOUT   reduce using rule 33
	%eof           reduce using rule 33


State 46

	TermArgsM -> '{' TArgsSep . '}'                     (rule 49)

	'}'            shift, and enter state 70


State 47

	TArgsSep -> Term .                                  (rule 51)
	TArgsSep -> Term . ',' TArgsSep                     (rule 52)

	','            shift, and enter state 69
	')'            reduce using rule 51
	']'            reduce using rule 51
	'}'            reduce using rule 51


State 48

	Term -> IDENT . 'ᶜ' TermArgsM                       (rule 54)
	Term -> IDENT . TermArgsM                           (rule 55)

	'ᶜ'            shift, and enter state 68
	','            reduce using rule 50
	'theorem'      reduce using rule 50
	'axioms'       reduce using rule 50
	'('            shift, and enter state 31
	')'            reduce using rule 50
	'['            shift, and enter state 32
	']'            reduce using rule 50
	'{'            shift, and enter state 33
	'}'            reduce using rule 50
	%eof           reduce using rule 50

	TermArgsM      goto state 67

State 49

	Term -> '(' . Term ')'                              (rule 56)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49

	Term           goto state 66

State 50

	TermArgsM -> '[' TArgsSep . ']'                     (rule 48)

	']'            shift, and enter state 65


State 51

	TermArgsM -> '(' TArgsSep . ')'                     (rule 47)

	')'            shift, and enter state 64


State 52

	Formula -> '∀' B Binders . ':' QFormula             (rule 37)

	':'            shift, and enter state 63


State 53

	Binders -> IDENT . Binders                          (rule 44)

	IDENT          shift, and enter state 53
	':'            reduce using rule 43

	Binders        goto state 62

State 54

	Formula -> '∃' B Binders . ':' QFormula             (rule 38)

	':'            shift, and enter state 61


State 55

	Formula -> '(' Formula ')' .                        (rule 39)

	IDENT          reduce using rule 39
	','            reduce using rule 39
	'theorem'      reduce using rule 39
	'by'           reduce using rule 39
	'for'          reduce using rule 39
	'⊢'            reduce using rule 39
	'⊤'            reduce using rule 39
	'⊥'            reduce using rule 39
	'∀'            reduce using rule 39
	'∃'            reduce using rule 39
	'¬'            reduce using rule 39
	'∧'            reduce using rule 39
	'∨'            reduce using rule 39
	'==>'          reduce using rule 39
	'<=>'          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'_'            reduce using rule 39
	'---'          reduce using rule 39
	BEGIN_LAYOUT   reduce using rule 39
	%eof           reduce using rule 39


State 56

	Formula -> '[' Formula ']' .                        (rule 41)

	IDENT          reduce using rule 41
	','            reduce using rule 41
	'theorem'      reduce using rule 41
	'by'           reduce using rule 41
	'for'          reduce using rule 41
	'⊢'            reduce using rule 41
	'⊤'            reduce using rule 41
	'⊥'            reduce using rule 41
	'∀'            reduce using rule 41
	'∃'            reduce using rule 41
	'¬'            reduce using rule 41
	'∧'            reduce using rule 41
	'∨'            reduce using rule 41
	'==>'          reduce using rule 41
	'<=>'          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	'_'            reduce using rule 41
	'---'          reduce using rule 41
	BEGIN_LAYOUT   reduce using rule 41
	%eof           reduce using rule 41


State 57

	Formula -> '{' Formula '}' .                        (rule 40)

	IDENT          reduce using rule 40
	','            reduce using rule 40
	'theorem'      reduce using rule 40
	'by'           reduce using rule 40
	'for'          reduce using rule 40
	'⊢'            reduce using rule 40
	'⊤'            reduce using rule 40
	'⊥'            reduce using rule 40
	'∀'            reduce using rule 40
	'∃'            reduce using rule 40
	'¬'            reduce using rule 40
	'∧'            reduce using rule 40
	'∨'            reduce using rule 40
	'==>'          reduce using rule 40
	'<=>'          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'_'            reduce using rule 40
	'---'          reduce using rule 40
	BEGIN_LAYOUT   reduce using rule 40
	%eof           reduce using rule 40


State 58

	Theorem -> 'theorem' IDENT ':' . Assumptions '⊢' Conclusion Proof    (rule 22)
	Theorem -> 'theorem' IDENT ':' . Formula Proof      (rule 23)

	IDENT          shift, and enter state 9
	'⊢'            reduce using rule 25
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Assumptions    goto state 59
	Formula        goto state 60
	Relation       goto state 8

State 59

	Theorem -> 'theorem' IDENT ':' Assumptions . '⊢' Conclusion Proof    (rule 22)

	'⊢'            shift, and enter state 96


State 60

	Theorem -> 'theorem' IDENT ':' Formula . Proof      (rule 23)
	Assumptions -> Formula . AssumpsRest                (rule 24)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          shift, and enter state 92
	','            shift, and enter state 93
	'theorem'      reduce using rule 59
	'⊢'            reduce using rule 27
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	BEGIN_LAYOUT   shift, and enter state 95
	%eof           reduce using rule 59

	AssumpsRest    goto state 85
	Formula        goto state 86
	Relation       goto state 8
	Proof          goto state 87
	Subproof       goto state 88
	SubProofAux    goto state 89
	Claim          goto state 90
	Name           goto state 91

State 61

	Formula -> '∃' B Binders ':' . QFormula             (rule 38)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 82
	QFormula       goto state 84
	Relation       goto state 8

State 62

	Binders -> IDENT Binders .                          (rule 44)

	':'            reduce using rule 44


State 63

	Formula -> '∀' B Binders ':' . QFormula             (rule 37)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 82
	QFormula       goto state 83
	Relation       goto state 8

State 64

	TermArgsM -> '(' TArgsSep ')' .                     (rule 47)

	IDENT          reduce using rule 47
	','            reduce using rule 47
	'theorem'      reduce using rule 47
	'axioms'       reduce using rule 47
	'by'           reduce using rule 47
	'for'          reduce using rule 47
	'⊢'            reduce using rule 47
	'⊤'            reduce using rule 47
	'⊥'            reduce using rule 47
	'∀'            reduce using rule 47
	'∃'            reduce using rule 47
	'¬'            reduce using rule 47
	'∧'            reduce using rule 47
	'∨'            reduce using rule 47
	'==>'          reduce using rule 47
	'<=>'          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	'_'            reduce using rule 47
	'---'          reduce using rule 47
	BEGIN_LAYOUT   reduce using rule 47
	%eof           reduce using rule 47


State 65

	TermArgsM -> '[' TArgsSep ']' .                     (rule 48)

	IDENT          reduce using rule 48
	','            reduce using rule 48
	'theorem'      reduce using rule 48
	'axioms'       reduce using rule 48
	'by'           reduce using rule 48
	'for'          reduce using rule 48
	'⊢'            reduce using rule 48
	'⊤'            reduce using rule 48
	'⊥'            reduce using rule 48
	'∀'            reduce using rule 48
	'∃'            reduce using rule 48
	'¬'            reduce using rule 48
	'∧'            reduce using rule 48
	'∨'            reduce using rule 48
	'==>'          reduce using rule 48
	'<=>'          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	'_'            reduce using rule 48
	'---'          reduce using rule 48
	BEGIN_LAYOUT   reduce using rule 48
	%eof           reduce using rule 48


State 66

	Term -> '(' Term . ')'                              (rule 56)

	')'            shift, and enter state 81


State 67

	Term -> IDENT TermArgsM .                           (rule 55)

	','            reduce using rule 55
	'theorem'      reduce using rule 55
	'axioms'       reduce using rule 55
	')'            reduce using rule 55
	']'            reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 68

	Term -> IDENT 'ᶜ' . TermArgsM                       (rule 54)

	','            reduce using rule 50
	'theorem'      reduce using rule 50
	'axioms'       reduce using rule 50
	'('            shift, and enter state 31
	')'            reduce using rule 50
	'['            shift, and enter state 32
	']'            reduce using rule 50
	'{'            shift, and enter state 33
	'}'            reduce using rule 50
	%eof           reduce using rule 50

	TermArgsM      goto state 80

State 69

	TArgsSep -> Term ',' . TArgsSep                     (rule 52)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53

	TArgsSep       goto state 79
	Term           goto state 47

State 70

	TermArgsM -> '{' TArgsSep '}' .                     (rule 49)

	IDENT          reduce using rule 49
	','            reduce using rule 49
	'theorem'      reduce using rule 49
	'axioms'       reduce using rule 49
	'by'           reduce using rule 49
	'for'          reduce using rule 49
	'⊢'            reduce using rule 49
	'⊤'            reduce using rule 49
	'⊥'            reduce using rule 49
	'∀'            reduce using rule 49
	'∃'            reduce using rule 49
	'¬'            reduce using rule 49
	'∧'            reduce using rule 49
	'∨'            reduce using rule 49
	'==>'          reduce using rule 49
	'<=>'          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	'_'            reduce using rule 49
	'---'          reduce using rule 49
	BEGIN_LAYOUT   reduce using rule 49
	%eof           reduce using rule 49


State 71

	ConstantsD -> 'constants' ':' . Consts              (rule 6)

	IDENT          shift, and enter state 78

	Consts         goto state 77

State 72

	Module -> 'module' ModuleName ConstantsD Aliases . Axioms Theorems    (rule 4)

	'theorem'      reduce using rule 17
	'axioms'       shift, and enter state 76
	%eof           reduce using rule 17

	Axioms         goto state 75

State 73

	Aliases -> 'aliases' . ':' Alis                     (rule 8)

	':'            shift, and enter state 74


State 74

	Aliases -> 'aliases' ':' . Alis                     (rule 8)

	IDENT          shift, and enter state 119

	Alis           goto state 116
	Alias          goto state 117
	Ali            goto state 118

State 75

	Module -> 'module' ModuleName ConstantsD Aliases Axioms . Theorems    (rule 4)

	'theorem'      shift, and enter state 20
	%eof           reduce using rule 21

	Theorems       goto state 115
	Theorem        goto state 19

State 76

	Axioms -> 'axioms' . ':' Axs                        (rule 16)

	':'            shift, and enter state 114


State 77

	ConstantsD -> 'constants' ':' Consts .              (rule 6)

	'theorem'      reduce using rule 6
	'axioms'       reduce using rule 6
	'aliases'      reduce using rule 6
	%eof           reduce using rule 6


State 78

	Consts -> IDENT .                                   (rule 14)
	Consts -> IDENT . ',' Consts                        (rule 15)

	','            shift, and enter state 113
	'theorem'      reduce using rule 14
	'axioms'       reduce using rule 14
	'aliases'      reduce using rule 14
	%eof           reduce using rule 14


State 79

	TArgsSep -> Term ',' TArgsSep .                     (rule 52)

	')'            reduce using rule 52
	']'            reduce using rule 52
	'}'            reduce using rule 52


State 80

	Term -> IDENT 'ᶜ' TermArgsM .                       (rule 54)

	','            reduce using rule 54
	'theorem'      reduce using rule 54
	'axioms'       reduce using rule 54
	')'            reduce using rule 54
	']'            reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 81

	Term -> '(' Term ')' .                              (rule 56)

	','            reduce using rule 56
	'theorem'      reduce using rule 56
	'axioms'       reduce using rule 56
	')'            reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 82

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	QFormula -> Formula .                               (rule 45)

	IDENT          reduce using rule 45
	','            reduce using rule 45
	'theorem'      reduce using rule 45
	'by'           reduce using rule 45
	'for'          reduce using rule 45
	'⊢'            reduce using rule 45
	'⊤'            reduce using rule 45
	'⊥'            reduce using rule 45
	'∀'            reduce using rule 45
	'∃'            reduce using rule 45
	'¬'            reduce using rule 45
	'∧'            shift, and enter state 34
			(reduce using rule 45)

	'∨'            shift, and enter state 35
			(reduce using rule 45)

	'==>'          shift, and enter state 36
			(reduce using rule 45)

	'<=>'          shift, and enter state 37
			(reduce using rule 45)

	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	'_'            reduce using rule 45
	'---'          reduce using rule 45
	BEGIN_LAYOUT   reduce using rule 45
	%eof           reduce using rule 45


State 83

	Formula -> '∀' B Binders ':' QFormula .             (rule 37)

	IDENT          reduce using rule 37
	','            reduce using rule 37
	'theorem'      reduce using rule 37
	'by'           reduce using rule 37
	'for'          reduce using rule 37
	'⊢'            reduce using rule 37
	'⊤'            reduce using rule 37
	'⊥'            reduce using rule 37
	'∀'            reduce using rule 37
	'∃'            reduce using rule 37
	'¬'            reduce using rule 37
	'∧'            reduce using rule 37
	'∨'            reduce using rule 37
	'==>'          reduce using rule 37
	'<=>'          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'_'            reduce using rule 37
	'---'          reduce using rule 37
	BEGIN_LAYOUT   reduce using rule 37
	%eof           reduce using rule 37


State 84

	Formula -> '∃' B Binders ':' QFormula .             (rule 38)

	IDENT          reduce using rule 38
	','            reduce using rule 38
	'theorem'      reduce using rule 38
	'by'           reduce using rule 38
	'for'          reduce using rule 38
	'⊢'            reduce using rule 38
	'⊤'            reduce using rule 38
	'⊥'            reduce using rule 38
	'∀'            reduce using rule 38
	'∃'            reduce using rule 38
	'¬'            reduce using rule 38
	'∧'            reduce using rule 38
	'∨'            reduce using rule 38
	'==>'          reduce using rule 38
	'<=>'          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	'_'            reduce using rule 38
	'---'          reduce using rule 38
	BEGIN_LAYOUT   reduce using rule 38
	%eof           reduce using rule 38


State 85

	Assumptions -> Formula AssumpsRest .                (rule 24)

	'⊢'            reduce using rule 24


State 86

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Claim -> Formula . Just                             (rule 77)

	'by'           shift, and enter state 112
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37

	Just           goto state 111

State 87

	Theorem -> 'theorem' IDENT ':' Formula Proof .      (rule 23)

	'theorem'      reduce using rule 23
	%eof           reduce using rule 23


State 88

	Proof -> Subproof . Proof                           (rule 57)

	IDENT          shift, and enter state 92
	'theorem'      reduce using rule 59
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	BEGIN_LAYOUT   shift, and enter state 95
	END_LAYOUT     reduce using rule 59
	%eof           reduce using rule 59

	Formula        goto state 86
	Relation       goto state 8
	Proof          goto state 110
	Subproof       goto state 88
	SubProofAux    goto state 89
	Claim          goto state 90
	Name           goto state 91

State 89

	Subproof -> SubProofAux .                           (rule 60)

	IDENT          reduce using rule 60
	'theorem'      reduce using rule 60
	'⊤'            reduce using rule 60
	'⊥'            reduce using rule 60
	'∀'            reduce using rule 60
	'∃'            reduce using rule 60
	'¬'            reduce using rule 60
	'('            reduce using rule 60
	'['            reduce using rule 60
	'{'            reduce using rule 60
	'_'            reduce using rule 60
	BEGIN_LAYOUT   reduce using rule 60
	END_LAYOUT     reduce using rule 60
	%eof           reduce using rule 60


State 90

	Proof -> Claim . Proof                              (rule 58)

	IDENT          shift, and enter state 92
	'theorem'      reduce using rule 59
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	BEGIN_LAYOUT   shift, and enter state 95
	END_LAYOUT     reduce using rule 59
	%eof           reduce using rule 59

	Formula        goto state 86
	Relation       goto state 8
	Proof          goto state 109
	Subproof       goto state 88
	SubProofAux    goto state 89
	Claim          goto state 90
	Name           goto state 91

State 91

	Subproof -> Name . ':' SubProofAux                  (rule 61)
	Claim -> Name . ':' Formula Just                    (rule 76)

	':'            shift, and enter state 108


State 92

	Relation -> IDENT . TermArgsM                       (rule 46)
	Name -> IDENT .                                     (rule 78)

	IDENT          reduce using rule 50
	'by'           reduce using rule 50
	'for'          reduce using rule 50
	':'            reduce using rule 78
	'⊤'            reduce using rule 50
	'⊥'            reduce using rule 50
	'∀'            reduce using rule 50
	'∃'            reduce using rule 50
	'¬'            reduce using rule 50
	'∧'            reduce using rule 50
	'∨'            reduce using rule 50
	'==>'          reduce using rule 50
	'<=>'          reduce using rule 50
	'('            shift, and enter state 31
			(reduce using rule 50)

	'['            shift, and enter state 32
			(reduce using rule 50)

	'{'            shift, and enter state 33
			(reduce using rule 50)

	'_'            reduce using rule 50
	'---'          reduce using rule 50

	TermArgsM      goto state 30

State 93

	AssumpsRest -> ',' . Formula AssumpsRest            (rule 26)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 107
	Relation       goto state 8

State 94

	Name -> '_' .                                       (rule 79)

	':'            reduce using rule 79


State 95

	SubProofAux -> BEGIN_LAYOUT . Assumption '---' Proof END_LAYOUT    (rule 62)

	IDENT          shift, and enter state 92
	'for'          shift, and enter state 105
	'all'          shift, and enter state 106
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94

	Formula        goto state 99
	Relation       goto state 8
	Assumption     goto state 100
	ForAll         goto state 101
	AssumedFormula goto state 102
	AssumedFormulaegoto state 103
	Name           goto state 104

State 96

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' . Conclusion Proof    (rule 22)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Conclusion     goto state 97
	Formula        goto state 98
	Relation       goto state 8

State 97

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion . Proof    (rule 22)

	IDENT          shift, and enter state 92
	'theorem'      reduce using rule 59
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	BEGIN_LAYOUT   shift, and enter state 95
	%eof           reduce using rule 59

	Formula        goto state 86
	Relation       goto state 8
	Proof          goto state 140
	Subproof       goto state 88
	SubProofAux    goto state 89
	Claim          goto state 90
	Name           goto state 91

State 98

	Conclusion -> Formula .                             (rule 28)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	IDENT          reduce using rule 28
	'theorem'      reduce using rule 28
	'⊤'            reduce using rule 28
	'⊥'            reduce using rule 28
	'∀'            reduce using rule 28
	'∃'            reduce using rule 28
	'¬'            reduce using rule 28
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'('            reduce using rule 28
	'['            reduce using rule 28
	'{'            reduce using rule 28
	'_'            reduce using rule 28
	BEGIN_LAYOUT   reduce using rule 28
	%eof           reduce using rule 28


State 99

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	AssumedFormula -> Formula .                         (rule 69)

	IDENT          reduce using rule 69
	'for'          reduce using rule 69
	'⊤'            reduce using rule 69
	'⊥'            reduce using rule 69
	'∀'            reduce using rule 69
	'∃'            reduce using rule 69
	'¬'            reduce using rule 69
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'('            reduce using rule 69
	'['            reduce using rule 69
	'{'            reduce using rule 69
	'_'            reduce using rule 69
	'---'          reduce using rule 69


State 100

	SubProofAux -> BEGIN_LAYOUT Assumption . '---' Proof END_LAYOUT    (rule 62)

	'---'          shift, and enter state 139


State 101

	Assumption -> ForAll . Universals                   (rule 63)

	IDENT          shift, and enter state 138

	Universals     goto state 137

State 102

	Assumption -> AssumedFormula . 'for' 'some' Constants    (rule 65)
	AssumedFormulae -> AssumedFormula . AssumedFormulae    (rule 70)
	AssumedFormulae -> AssumedFormula .                 (rule 71)

	IDENT          shift, and enter state 92
	'for'          shift, and enter state 136
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	'---'          reduce using rule 71

	Formula        goto state 99
	Relation       goto state 8
	AssumedFormula goto state 134
	AssumedFormulaegoto state 135
	Name           goto state 104

State 103

	Assumption -> AssumedFormulae .                     (rule 64)

	'---'          reduce using rule 64


State 104

	AssumedFormula -> Name . ':' Formula                (rule 68)

	':'            shift, and enter state 133


State 105

	ForAll -> 'for' . 'all'                             (rule 67)

	'all'          shift, and enter state 132


State 106

	ForAll -> 'all' .                                   (rule 66)

	IDENT          reduce using rule 66


State 107

	AssumpsRest -> ',' Formula . AssumpsRest            (rule 26)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	','            shift, and enter state 93
	'⊢'            reduce using rule 27
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37

	AssumpsRest    goto state 131

State 108

	Subproof -> Name ':' . SubProofAux                  (rule 61)
	Claim -> Name ':' . Formula Just                    (rule 76)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	BEGIN_LAYOUT   shift, and enter state 95

	Formula        goto state 129
	Relation       goto state 8
	SubProofAux    goto state 130

State 109

	Proof -> Claim Proof .                              (rule 58)

	'theorem'      reduce using rule 58
	END_LAYOUT     reduce using rule 58
	%eof           reduce using rule 58


State 110

	Proof -> Subproof Proof .                           (rule 57)

	'theorem'      reduce using rule 57
	END_LAYOUT     reduce using rule 57
	%eof           reduce using rule 57


State 111

	Claim -> Formula Just .                             (rule 77)

	IDENT          reduce using rule 77
	'theorem'      reduce using rule 77
	'⊤'            reduce using rule 77
	'⊥'            reduce using rule 77
	'∀'            reduce using rule 77
	'∃'            reduce using rule 77
	'¬'            reduce using rule 77
	'('            reduce using rule 77
	'['            reduce using rule 77
	'{'            reduce using rule 77
	'_'            reduce using rule 77
	BEGIN_LAYOUT   reduce using rule 77
	END_LAYOUT     reduce using rule 77
	%eof           reduce using rule 77


State 112

	Just -> 'by' . 'rule' RuleKind OnIdents             (rule 80)
	Just -> 'by' . 'induction' OnIdents                 (rule 81)
	Just -> 'by' . 'unproved'                           (rule 82)
	Just -> 'by' . 'theorem' IDENT OnIdents             (rule 83)

	'theorem'      shift, and enter state 125
	'rule'         shift, and enter state 126
	'induction'    shift, and enter state 127
	'unproved'     shift, and enter state 128


State 113

	Consts -> IDENT ',' . Consts                        (rule 15)

	IDENT          shift, and enter state 78

	Consts         goto state 124

State 114

	Axioms -> 'axioms' ':' . Axs                        (rule 16)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Axs            goto state 122
	Formula        goto state 123
	Relation       goto state 8

State 115

	Module -> 'module' ModuleName ConstantsD Aliases Axioms Theorems .    (rule 4)

	%eof           reduce using rule 4


State 116

	Aliases -> 'aliases' ':' Alis .                     (rule 8)

	'theorem'      reduce using rule 8
	'axioms'       reduce using rule 8
	%eof           reduce using rule 8


State 117

	Alis -> Alias .                                     (rule 10)
	Alis -> Alias . ',' Alis                            (rule 11)

	','            shift, and enter state 121
	'theorem'      reduce using rule 10
	'axioms'       reduce using rule 10
	%eof           reduce using rule 10


State 118

	Alias -> Ali . '=' Term                             (rule 12)

	'='            shift, and enter state 120


State 119

	Ali -> IDENT .                                      (rule 13)

	'='            reduce using rule 13


State 120

	Alias -> Ali '=' . Term                             (rule 12)

	IDENT          shift, and enter state 48
	'('            shift, and enter state 49

	Term           goto state 153

State 121

	Alis -> Alias ',' . Alis                            (rule 11)

	IDENT          shift, and enter state 119

	Alis           goto state 152
	Alias          goto state 117
	Ali            goto state 118

State 122

	Axioms -> 'axioms' ':' Axs .                        (rule 16)

	'theorem'      reduce using rule 16
	%eof           reduce using rule 16


State 123

	Axs -> Formula .                                    (rule 18)
	Axs -> Formula . ',' Axs                            (rule 19)
	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)

	','            shift, and enter state 151
	'theorem'      reduce using rule 18
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	%eof           reduce using rule 18


State 124

	Consts -> IDENT ',' Consts .                        (rule 15)

	'theorem'      reduce using rule 15
	'axioms'       reduce using rule 15
	'aliases'      reduce using rule 15
	%eof           reduce using rule 15


State 125

	Just -> 'by' 'theorem' . IDENT OnIdents             (rule 83)

	IDENT          shift, and enter state 150


State 126

	Just -> 'by' 'rule' . RuleKind OnIdents             (rule 80)

	IDENT          shift, and enter state 149

	RuleKind       goto state 148

State 127

	Just -> 'by' 'induction' . OnIdents                 (rule 81)

	IDENT          reduce using rule 86
	'theorem'      reduce using rule 86
	'on'           shift, and enter state 147
	'⊤'            reduce using rule 86
	'⊥'            reduce using rule 86
	'∀'            reduce using rule 86
	'∃'            reduce using rule 86
	'¬'            reduce using rule 86
	'('            reduce using rule 86
	'['            reduce using rule 86
	'{'            reduce using rule 86
	'_'            reduce using rule 86
	BEGIN_LAYOUT   reduce using rule 86
	END_LAYOUT     reduce using rule 86
	%eof           reduce using rule 86

	OnIdents       goto state 146

State 128

	Just -> 'by' 'unproved' .                           (rule 82)

	IDENT          reduce using rule 82
	'theorem'      reduce using rule 82
	'⊤'            reduce using rule 82
	'⊥'            reduce using rule 82
	'∀'            reduce using rule 82
	'∃'            reduce using rule 82
	'¬'            reduce using rule 82
	'('            reduce using rule 82
	'['            reduce using rule 82
	'{'            reduce using rule 82
	'_'            reduce using rule 82
	BEGIN_LAYOUT   reduce using rule 82
	END_LAYOUT     reduce using rule 82
	%eof           reduce using rule 82


State 129

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	Claim -> Name ':' Formula . Just                    (rule 76)

	'by'           shift, and enter state 112
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37

	Just           goto state 145

State 130

	Subproof -> Name ':' SubProofAux .                  (rule 61)

	IDENT          reduce using rule 61
	'theorem'      reduce using rule 61
	'⊤'            reduce using rule 61
	'⊥'            reduce using rule 61
	'∀'            reduce using rule 61
	'∃'            reduce using rule 61
	'¬'            reduce using rule 61
	'('            reduce using rule 61
	'['            reduce using rule 61
	'{'            reduce using rule 61
	'_'            reduce using rule 61
	BEGIN_LAYOUT   reduce using rule 61
	END_LAYOUT     reduce using rule 61
	%eof           reduce using rule 61


State 131

	AssumpsRest -> ',' Formula AssumpsRest .            (rule 26)

	'⊢'            reduce using rule 26


State 132

	ForAll -> 'for' 'all' .                             (rule 67)

	IDENT          reduce using rule 67


State 133

	AssumedFormula -> Name ':' . Formula                (rule 68)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Formula        goto state 144
	Relation       goto state 8

State 134

	AssumedFormulae -> AssumedFormula . AssumedFormulae    (rule 70)
	AssumedFormulae -> AssumedFormula .                 (rule 71)

	IDENT          shift, and enter state 92
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	'---'          reduce using rule 71

	Formula        goto state 99
	Relation       goto state 8
	AssumedFormula goto state 134
	AssumedFormulaegoto state 135
	Name           goto state 104

State 135

	AssumedFormulae -> AssumedFormula AssumedFormulae .    (rule 70)

	'---'          reduce using rule 70


State 136

	Assumption -> AssumedFormula 'for' . 'some' Constants    (rule 65)

	'some'         shift, and enter state 143


State 137

	Assumption -> ForAll Universals .                   (rule 63)

	'---'          reduce using rule 63


State 138

	Universals -> IDENT .                               (rule 72)
	Universals -> IDENT . ',' Universals                (rule 73)

	','            shift, and enter state 142
	'---'          reduce using rule 72


State 139

	SubProofAux -> BEGIN_LAYOUT Assumption '---' . Proof END_LAYOUT    (rule 62)

	IDENT          shift, and enter state 92
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17
	'_'            shift, and enter state 94
	BEGIN_LAYOUT   shift, and enter state 95
	END_LAYOUT     reduce using rule 59

	Formula        goto state 86
	Relation       goto state 8
	Proof          goto state 141
	Subproof       goto state 88
	SubProofAux    goto state 89
	Claim          goto state 90
	Name           goto state 91

State 140

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion Proof .    (rule 22)

	'theorem'      reduce using rule 22
	%eof           reduce using rule 22


State 141

	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof . END_LAYOUT    (rule 62)

	END_LAYOUT     shift, and enter state 162


State 142

	Universals -> IDENT ',' . Universals                (rule 73)

	IDENT          shift, and enter state 138

	Universals     goto state 161

State 143

	Assumption -> AssumedFormula 'for' 'some' . Constants    (rule 65)

	IDENT          shift, and enter state 160

	Constants      goto state 159

State 144

	Formula -> Formula . '∧' Formula                    (rule 33)
	Formula -> Formula . '∨' Formula                    (rule 34)
	Formula -> Formula . '==>' Formula                  (rule 35)
	Formula -> Formula . '<=>' Formula                  (rule 36)
	AssumedFormula -> Name ':' Formula .                (rule 68)

	IDENT          reduce using rule 68
	'for'          reduce using rule 68
	'⊤'            reduce using rule 68
	'⊥'            reduce using rule 68
	'∀'            reduce using rule 68
	'∃'            reduce using rule 68
	'¬'            reduce using rule 68
	'∧'            shift, and enter state 34
	'∨'            shift, and enter state 35
	'==>'          shift, and enter state 36
	'<=>'          shift, and enter state 37
	'('            reduce using rule 68
	'['            reduce using rule 68
	'{'            reduce using rule 68
	'_'            reduce using rule 68
	'---'          reduce using rule 68


State 145

	Claim -> Name ':' Formula Just .                    (rule 76)

	IDENT          reduce using rule 76
	'theorem'      reduce using rule 76
	'⊤'            reduce using rule 76
	'⊥'            reduce using rule 76
	'∀'            reduce using rule 76
	'∃'            reduce using rule 76
	'¬'            reduce using rule 76
	'('            reduce using rule 76
	'['            reduce using rule 76
	'{'            reduce using rule 76
	'_'            reduce using rule 76
	BEGIN_LAYOUT   reduce using rule 76
	END_LAYOUT     reduce using rule 76
	%eof           reduce using rule 76


State 146

	Just -> 'by' 'induction' OnIdents .                 (rule 81)

	IDENT          reduce using rule 81
	'theorem'      reduce using rule 81
	'⊤'            reduce using rule 81
	'⊥'            reduce using rule 81
	'∀'            reduce using rule 81
	'∃'            reduce using rule 81
	'¬'            reduce using rule 81
	'('            reduce using rule 81
	'['            reduce using rule 81
	'{'            reduce using rule 81
	'_'            reduce using rule 81
	BEGIN_LAYOUT   reduce using rule 81
	END_LAYOUT     reduce using rule 81
	%eof           reduce using rule 81


State 147

	OnIdents -> 'on' . Idents                           (rule 85)

	IDENT          shift, and enter state 158

	Idents         goto state 157

State 148

	Just -> 'by' 'rule' RuleKind . OnIdents             (rule 80)

	IDENT          reduce using rule 86
	'theorem'      reduce using rule 86
	'on'           shift, and enter state 147
	'⊤'            reduce using rule 86
	'⊥'            reduce using rule 86
	'∀'            reduce using rule 86
	'∃'            reduce using rule 86
	'¬'            reduce using rule 86
	'('            reduce using rule 86
	'['            reduce using rule 86
	'{'            reduce using rule 86
	'_'            reduce using rule 86
	BEGIN_LAYOUT   reduce using rule 86
	END_LAYOUT     reduce using rule 86
	%eof           reduce using rule 86

	OnIdents       goto state 156

State 149

	RuleKind -> IDENT .                                 (rule 84)

	IDENT          reduce using rule 84
	'theorem'      reduce using rule 84
	'on'           reduce using rule 84
	'⊤'            reduce using rule 84
	'⊥'            reduce using rule 84
	'∀'            reduce using rule 84
	'∃'            reduce using rule 84
	'¬'            reduce using rule 84
	'('            reduce using rule 84
	'['            reduce using rule 84
	'{'            reduce using rule 84
	'_'            reduce using rule 84
	BEGIN_LAYOUT   reduce using rule 84
	END_LAYOUT     reduce using rule 84
	%eof           reduce using rule 84


State 150

	Just -> 'by' 'theorem' IDENT . OnIdents             (rule 83)

	IDENT          reduce using rule 86
	'theorem'      reduce using rule 86
	'on'           shift, and enter state 147
	'⊤'            reduce using rule 86
	'⊥'            reduce using rule 86
	'∀'            reduce using rule 86
	'∃'            reduce using rule 86
	'¬'            reduce using rule 86
	'('            reduce using rule 86
	'['            reduce using rule 86
	'{'            reduce using rule 86
	'_'            reduce using rule 86
	BEGIN_LAYOUT   reduce using rule 86
	END_LAYOUT     reduce using rule 86
	%eof           reduce using rule 86

	OnIdents       goto state 155

State 151

	Axs -> Formula ',' . Axs                            (rule 19)

	IDENT          shift, and enter state 9
	'⊤'            shift, and enter state 10
	'⊥'            shift, and enter state 11
	'∀'            shift, and enter state 12
	'∃'            shift, and enter state 13
	'¬'            shift, and enter state 14
	'('            shift, and enter state 15
	'['            shift, and enter state 16
	'{'            shift, and enter state 17

	Axs            goto state 154
	Formula        goto state 123
	Relation       goto state 8

State 152

	Alis -> Alias ',' Alis .                            (rule 11)

	'theorem'      reduce using rule 11
	'axioms'       reduce using rule 11
	%eof           reduce using rule 11


State 153

	Alias -> Ali '=' Term .                             (rule 12)

	','            reduce using rule 12
	'theorem'      reduce using rule 12
	'axioms'       reduce using rule 12
	%eof           reduce using rule 12


State 154

	Axs -> Formula ',' Axs .                            (rule 19)

	'theorem'      reduce using rule 19
	%eof           reduce using rule 19


State 155

	Just -> 'by' 'theorem' IDENT OnIdents .             (rule 83)

	IDENT          reduce using rule 83
	'theorem'      reduce using rule 83
	'⊤'            reduce using rule 83
	'⊥'            reduce using rule 83
	'∀'            reduce using rule 83
	'∃'            reduce using rule 83
	'¬'            reduce using rule 83
	'('            reduce using rule 83
	'['            reduce using rule 83
	'{'            reduce using rule 83
	'_'            reduce using rule 83
	BEGIN_LAYOUT   reduce using rule 83
	END_LAYOUT     reduce using rule 83
	%eof           reduce using rule 83


State 156

	Just -> 'by' 'rule' RuleKind OnIdents .             (rule 80)

	IDENT          reduce using rule 80
	'theorem'      reduce using rule 80
	'⊤'            reduce using rule 80
	'⊥'            reduce using rule 80
	'∀'            reduce using rule 80
	'∃'            reduce using rule 80
	'¬'            reduce using rule 80
	'('            reduce using rule 80
	'['            reduce using rule 80
	'{'            reduce using rule 80
	'_'            reduce using rule 80
	BEGIN_LAYOUT   reduce using rule 80
	END_LAYOUT     reduce using rule 80
	%eof           reduce using rule 80


State 157

	OnIdents -> 'on' Idents .                           (rule 85)

	IDENT          reduce using rule 85
	'theorem'      reduce using rule 85
	'⊤'            reduce using rule 85
	'⊥'            reduce using rule 85
	'∀'            reduce using rule 85
	'∃'            reduce using rule 85
	'¬'            reduce using rule 85
	'('            reduce using rule 85
	'['            reduce using rule 85
	'{'            reduce using rule 85
	'_'            reduce using rule 85
	BEGIN_LAYOUT   reduce using rule 85
	END_LAYOUT     reduce using rule 85
	%eof           reduce using rule 85


State 158

	Idents -> IDENT .                                   (rule 87)
	Idents -> IDENT . ',' IdentsAux                     (rule 88)

	IDENT          reduce using rule 87
	','            shift, and enter state 164
	'theorem'      reduce using rule 87
	'⊤'            reduce using rule 87
	'⊥'            reduce using rule 87
	'∀'            reduce using rule 87
	'∃'            reduce using rule 87
	'¬'            reduce using rule 87
	'('            reduce using rule 87
	'['            reduce using rule 87
	'{'            reduce using rule 87
	'_'            reduce using rule 87
	BEGIN_LAYOUT   reduce using rule 87
	END_LAYOUT     reduce using rule 87
	%eof           reduce using rule 87


State 159

	Assumption -> AssumedFormula 'for' 'some' Constants .    (rule 65)

	'---'          reduce using rule 65


State 160

	Constants -> IDENT .                                (rule 74)
	Constants -> IDENT . ',' Constants                  (rule 75)

	','            shift, and enter state 163
	'---'          reduce using rule 74


State 161

	Universals -> IDENT ',' Universals .                (rule 73)

	'---'          reduce using rule 73


State 162

	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof END_LAYOUT .    (rule 62)

	IDENT          reduce using rule 62
	'theorem'      reduce using rule 62
	'⊤'            reduce using rule 62
	'⊥'            reduce using rule 62
	'∀'            reduce using rule 62
	'∃'            reduce using rule 62
	'¬'            reduce using rule 62
	'('            reduce using rule 62
	'['            reduce using rule 62
	'{'            reduce using rule 62
	'_'            reduce using rule 62
	BEGIN_LAYOUT   reduce using rule 62
	END_LAYOUT     reduce using rule 62
	%eof           reduce using rule 62


State 163

	Constants -> IDENT ',' . Constants                  (rule 75)

	IDENT          shift, and enter state 160

	Constants      goto state 167

State 164

	Idents -> IDENT ',' . IdentsAux                     (rule 88)

	IDENT          shift, and enter state 166

	IdentsAux      goto state 165

State 165

	Idents -> IDENT ',' IdentsAux .                     (rule 88)

	IDENT          reduce using rule 88
	'theorem'      reduce using rule 88
	'⊤'            reduce using rule 88
	'⊥'            reduce using rule 88
	'∀'            reduce using rule 88
	'∃'            reduce using rule 88
	'¬'            reduce using rule 88
	'('            reduce using rule 88
	'['            reduce using rule 88
	'{'            reduce using rule 88
	'_'            reduce using rule 88
	BEGIN_LAYOUT   reduce using rule 88
	END_LAYOUT     reduce using rule 88
	%eof           reduce using rule 88


State 166

	IdentsAux -> IDENT . ',' IdentsAux                  (rule 89)
	IdentsAux -> IDENT .                                (rule 90)

	IDENT          reduce using rule 90
	','            shift, and enter state 168
	'theorem'      reduce using rule 90
	'⊤'            reduce using rule 90
	'⊥'            reduce using rule 90
	'∀'            reduce using rule 90
	'∃'            reduce using rule 90
	'¬'            reduce using rule 90
	'('            reduce using rule 90
	'['            reduce using rule 90
	'{'            reduce using rule 90
	'_'            reduce using rule 90
	BEGIN_LAYOUT   reduce using rule 90
	END_LAYOUT     reduce using rule 90
	%eof           reduce using rule 90


State 167

	Constants -> IDENT ',' Constants .                  (rule 75)

	'---'          reduce using rule 75


State 168

	IdentsAux -> IDENT ',' . IdentsAux                  (rule 89)

	IDENT          shift, and enter state 166

	IdentsAux      goto state 169

State 169

	IdentsAux -> IDENT ',' IdentsAux .                  (rule 89)

	IDENT          reduce using rule 89
	'theorem'      reduce using rule 89
	'⊤'            reduce using rule 89
	'⊥'            reduce using rule 89
	'∀'            reduce using rule 89
	'∃'            reduce using rule 89
	'¬'            reduce using rule 89
	'('            reduce using rule 89
	'['            reduce using rule 89
	'{'            reduce using rule 89
	'_'            reduce using rule 89
	BEGIN_LAYOUT   reduce using rule 89
	END_LAYOUT     reduce using rule 89
	%eof           reduce using rule 89


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 40
Number of non-terminals: 43
Number of states: 170

-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Parser/Parser.y
-----------------------------------------------------------------------------

state 9 contains 3 shift/reduce conflicts.
state 19 contains 1 shift/reduce conflicts.
state 92 contains 4 shift/reduce conflicts.
state 120 contains 1 shift/reduce conflicts.
state 193 contains 1 shift/reduce conflicts.

terminal '.' is unused
terminal 'objects' is unused
terminal 'proposition' is unused
terminal '|' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseModule -> Module                       (0)
	%start_parseTheorems -> Theorems                   (1)
	%start_parseFormula -> Formula                     (2)
	%start_parse -> Module                             (3)
	Module -> 'module' ModuleName ConstantsD Aliases Axioms Syntax Judgments Theorems   (4)
	ModuleName -> IDENT                                (5)
	ConstantsD -> 'constants' ':' Consts               (6)
	ConstantsD ->                                      (7)
	Aliases -> 'aliases' ':' Alis                      (8)
	Aliases ->                                         (9)
	Alis -> Alias                                      (10)
	Alis -> Alias ',' Alis                             (11)
	Alias -> Ali '=' Term                              (12)
	Ali -> IDENT                                       (13)
	Consts -> TypeAnn                                  (14)
	Consts -> TypeAnn ',' Consts                       (15)
	Axioms ->                                          (16)
	Axioms -> Axs Axioms                               (17)
	Axs -> 'axiom' IDENT ':' Formula                   (18)
	Syntax -> Syn Syntax                               (19)
	Syntax ->                                          (20)
	Syn -> 'syntax' PropVar Constructors               (21)
	Constructors -> '=' Constructor ConstrsAux         (22)
	Constructors ->                                    (23)
	Constructor -> IDENT                               (24)
	Constructor -> IDENT '(' Type Types ')'            (25)
	ConstrsAux -> BEGIN_LAYOUT Constructor ConstrsAux END_LAYOUT   (26)
	ConstrsAux ->                                      (27)
	Types -> ',' Type Types                            (28)
	Types ->                                           (29)
	Judgments -> Jud Judgments                         (30)
	Judgments ->                                       (31)
	Jud -> 'judgment' IDENT '=' Constructor Rules      (32)
	Rules -> Rule Rules                                (33)
	Rules ->                                           (34)
	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT   (35)
	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT   (36)
	Objects -> TypeAnn2                                (37)
	Objects -> TypeAnn2 ',' Objects                    (38)
	TypeAnn2 -> '(' IDENT ':' PropVar ')'              (39)
	Formulas -> Formula Formulas                       (40)
	Formulas ->                                        (41)
	Theorems -> Theorem Theorems                       (42)
	Theorems ->                                        (43)
	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion Proof   (44)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof   (45)
	Theorem -> 'theorem' IDENT ':' Formula Proof       (46)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Formula Proof   (47)
	Props -> PropsAux                                  (48)
	PropsAux -> PropVar                                (49)
	PropsAux -> PropVar ',' PropsAux                   (50)
	Assumptions -> Formula AssumpsRest                 (51)
	Assumptions ->                                     (52)
	AssumpsRest -> ',' Formula AssumpsRest             (53)
	AssumpsRest ->                                     (54)
	Conclusion -> Formula                              (55)
	Formula -> '⊤'                                     (56)
	Formula -> '⊥'                                     (57)
	Formula -> Relation                                (58)
	Formula -> '¬' Formula                             (59)
	Formula -> Formula '∧' Formula                     (60)
	Formula -> Formula '∨' Formula                     (61)
	Formula -> Formula '==>' Formula                   (62)
	Formula -> Formula '<=>' Formula                   (63)
	Formula -> '∀' B Binders ':' QFormula              (64)
	Formula -> '∃' B Binders ':' QFormula              (65)
	Formula -> '(' Formula ')'                         (66)
	Formula -> '{' Formula '}'                         (67)
	Formula -> '[' Formula ']'                         (68)
	B ->                                               (69)
	Binders ->                                         (70)
	Binders -> TypeAnn Binders                         (71)
	TypeAnn -> '(' IDENT ':' Type ')'                  (72)
	TypeAnn -> IDENT                                   (73)
	Type -> PropVar                                    (74)
	Type -> Type '->' Type                             (75)
	QFormula -> Formula                                (76)
	Relation -> PropVar TermArgsM                      (77)
	Relation -> '_'                                    (78)
	Relation -> '_' PropVar                            (79)
	PropVar -> IDENT                                   (80)
	TermArgsM -> '(' TArgsSep ')'                      (81)
	TermArgsM -> '[' TArgsSep ']'                      (82)
	TermArgsM -> '{' TArgsSep '}'                      (83)
	TermArgsM ->                                       (84)
	TArgsSep -> Term                                   (85)
	TArgsSep -> Term ',' TArgsSep                      (86)
	TArgsSep ->                                        (87)
	Term -> IDENT 'ᶜ' TermArgsM                        (88)
	Term -> IDENT TermArgsM                            (89)
	Term -> '(' Term ')'                               (90)
	Proof -> Subproof Proof                            (91)
	Proof -> Claim Proof                               (92)
	Proof -> '_' PropVar ':=' Formula Proof            (93)
	Proof -> 'prove' Formula Proof                     (94)
	Proof ->                                           (95)
	Subproof -> SubProofAux                            (96)
	Subproof -> Name ':' SubProofAux                   (97)
	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof END_LAYOUT   (98)
	Assumption -> ForAll Rigids                        (99)
	Assumption -> AssumedFormulae                      (100)
	Assumption -> AssumedFormula 'for' 'some' Rigids   (101)
	ForAll -> 'all'                                    (102)
	ForAll -> 'for' 'all'                              (103)
	AssumedFormula -> Name ':' Formula                 (104)
	AssumedFormula -> Formula                          (105)
	AssumedFormulae -> AssumedFormula AssumedFormulae   (106)
	AssumedFormulae ->                                 (107)
	Rigids -> TypeAnn1                                 (108)
	Rigids -> TypeAnn1 ',' Rigids                      (109)
	TypeAnn1 -> '(' IDENT ':' PropVar ')'              (110)
	TypeAnn1 -> IDENT                                  (111)
	Claim -> Name ':' Formula Just                     (112)
	Claim -> Formula Just                              (113)
	Name -> IDENT                                      (114)
	Name -> '_'                                        (115)
	Just -> 'by' 'rule' RuleKind OnIdents              (116)
	Just -> 'by' 'induction' ':' Cases                 (117)
	Just -> 'by' 'unproved'                            (118)
	Just -> 'by' 'axiom' IDENT                         (119)
	Just -> 'by' 'theorem' IDENT OnIdents              (120)
	Just -> 'by' 'case' 'analysis' 'on' Term ':' Cases   (121)
	Cases -> Case Cases                                (122)
	Cases ->                                           (123)
	Case -> 'case' Pattern '->' SubProofAux            (124)
	Pattern -> IDENT 'ᶜ' PatVars                       (125)
	Pattern -> IDENT PatVars                           (126)
	Pattern -> '(' Pattern ')'                         (127)
	PatVars -> '(' PatVs ')'                           (128)
	PatVars ->                                         (129)
	PatVs -> PatVss                                    (130)
	PatVs ->                                           (131)
	PatVss -> PatV ',' PatVss                          (132)
	PatVss -> PatV                                     (133)
	PatV -> IDENT                                      (134)
	RuleKind -> IDENT                                  (135)
	OnIdents -> 'on' Idents                            (136)
	OnIdents ->                                        (137)
	Idents -> IDENT                                    (138)
	Idents -> IDENT ',' IdentsAux                      (139)
	IdentsAux -> IDENT ',' IdentsAux                   (140)
	IdentsAux -> IDENT                                 (141)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	IDENT          { Token.Ident $$ }
	'ᶜ'            { Token.Constant'Before }
	'module'       { Token.Module }
	','            { Token.Comma }
	'.'            { Token.Period }
	'schema'       { Token.Schema }
	'theorem'      { Token.Theorem }
	'judgment'     { Token.Judgment }
	'syntax'       { Token.Syntax }
	'constants'    { Token.Constants }
	'axiom'        { Token.Axiom }
	'aliases'      { Token.Aliases }
	'by'           { Token.By }
	'rule'         { Token.Rule }
	'induction'    { Token.Induction }
	'on'           { Token.On }
	'for'          { Token.For }
	'all'          { Token.All }
	'some'         { Token.Some }
	'unproved'     { Token.Unproved }
	'case'         { Token.Case }
	'analysis'     { Token.Analysis }
	'object'       { Token.Object }
	'objects'      { Token.Object }
	'proposition'  { Token.Proposition }
	'propositions' { Token.Proposition }
	'prove'        { Token.Prove }
	':='           { Token.Defines }
	':'            { Token.Colon }
	'⊢'            { Token.Turnstile }
	'⊤'            { Token.Tautology }
	'⊥'            { Token.Contradiction }
	'∀'            { Token.Forall }
	'∃'            { Token.Exists }
	'¬'            { Token.Negate }
	'∧'            { Token.And }
	'∨'            { Token.Or }
	'==>'          { Token.Implication }
	'<=>'          { Token.Equivalence }
	'('            { Token.Paren'Open }
	')'            { Token.Paren'Close }
	'['            { Token.Box'Open }
	']'            { Token.Box'Close }
	'{'            { Token.Bracket'Open }
	'}'            { Token.Bracket'Close }
	'->'           { Token.Type'Arrow }
	'_'            { Token.Underscore }
	'='            { Token.Equal }
	'|'            { Token.Pipe }
	'---'          { Token.Dash }
	BEGIN_LAYOUT   { Token.Begin'Layout }
	END_LAYOUT     { Token.End'Layout }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseModule rule  0
	%start_parseTheorems rule  1
	%start_parseFormula rule  2
	%start_parse    rule  3
	Module          rule  4
	ModuleName      rule  5
	ConstantsD      rules 6, 7
	Aliases         rules 8, 9
	Alis            rules 10, 11
	Alias           rule  12
	Ali             rule  13
	Consts          rules 14, 15
	Axioms          rules 16, 17
	Axs             rule  18
	Syntax          rules 19, 20
	Syn             rule  21
	Constructors    rules 22, 23
	Constructor     rules 24, 25
	ConstrsAux      rules 26, 27
	Types           rules 28, 29
	Judgments       rules 30, 31
	Jud             rule  32
	Rules           rules 33, 34
	Rule            rules 35, 36
	Objects         rules 37, 38
	TypeAnn2        rule  39
	Formulas        rules 40, 41
	Theorems        rules 42, 43
	Theorem         rules 44, 45, 46, 47
	Props           rule  48
	PropsAux        rules 49, 50
	Assumptions     rules 51, 52
	AssumpsRest     rules 53, 54
	Conclusion      rule  55
	Formula         rules 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
	B               rule  69
	Binders         rules 70, 71
	TypeAnn         rules 72, 73
	Type            rules 74, 75
	QFormula        rule  76
	Relation        rules 77, 78, 79
	PropVar         rule  80
	TermArgsM       rules 81, 82, 83, 84
	TArgsSep        rules 85, 86, 87
	Term            rules 88, 89, 90
	Proof           rules 91, 92, 93, 94, 95
	Subproof        rules 96, 97
	SubProofAux     rule  98
	Assumption      rules 99, 100, 101
	ForAll          rules 102, 103
	AssumedFormula  rules 104, 105
	AssumedFormulae rules 106, 107
	Rigids          rules 108, 109
	TypeAnn1        rules 110, 111
	Claim           rules 112, 113
	Name            rules 114, 115
	Just            rules 116, 117, 118, 119, 120, 121
	Cases           rules 122, 123
	Case            rule  124
	Pattern         rules 125, 126, 127
	PatVars         rules 128, 129
	PatVs           rules 130, 131
	PatVss          rules 132, 133
	PatV            rule  134
	RuleKind        rule  135
	OnIdents        rules 136, 137
	Idents          rules 138, 139
	IdentsAux       rules 140, 141

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseModule -> . Module                      (rule 0)

	'module'       shift, and enter state 5

	Module         goto state 23

State 1

	%start_parseTheorems -> . Theorems                  (rule 1)

	'theorem'      shift, and enter state 22
	%eof           reduce using rule 43

	Theorems       goto state 20
	Theorem        goto state 21

State 2

	%start_parseFormula -> . Formula                    (rule 2)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 7
	Relation       goto state 8
	PropVar        goto state 9

State 3

	%start_parse -> . Module                            (rule 3)

	'module'       shift, and enter state 5

	Module         goto state 6

State 4

	Module -> . 'module' ModuleName ConstantsD Aliases Axioms Syntax Judgments Theorems    (rule 4)

	'module'       shift, and enter state 5


State 5

	Module -> 'module' . ModuleName ConstantsD Aliases Axioms Syntax Judgments Theorems    (rule 4)

	IDENT          shift, and enter state 43

	ModuleName     goto state 42

State 6

	%start_parse -> Module .                            (rule 3)

	%eof           accept


State 7

	%start_parseFormula -> Formula .                    (rule 2)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	%eof           accept


State 8

	Formula -> Relation .                               (rule 58)

	IDENT          reduce using rule 58
	','            reduce using rule 58
	'theorem'      reduce using rule 58
	'judgment'     reduce using rule 58
	'syntax'       reduce using rule 58
	'axiom'        reduce using rule 58
	'by'           reduce using rule 58
	'for'          reduce using rule 58
	'prove'        reduce using rule 58
	'⊢'            reduce using rule 58
	'⊤'            reduce using rule 58
	'⊥'            reduce using rule 58
	'∀'            reduce using rule 58
	'∃'            reduce using rule 58
	'¬'            reduce using rule 58
	'∧'            reduce using rule 58
	'∨'            reduce using rule 58
	'==>'          reduce using rule 58
	'<=>'          reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	'_'            reduce using rule 58
	'---'          reduce using rule 58
	BEGIN_LAYOUT   reduce using rule 58
	END_LAYOUT     reduce using rule 58
	%eof           reduce using rule 58


State 9

	Relation -> PropVar . TermArgsM                     (rule 77)

	IDENT          reduce using rule 84
	','            reduce using rule 84
	'theorem'      reduce using rule 84
	'judgment'     reduce using rule 84
	'syntax'       reduce using rule 84
	'axiom'        reduce using rule 84
	'by'           reduce using rule 84
	'for'          reduce using rule 84
	'prove'        reduce using rule 84
	'⊢'            reduce using rule 84
	'⊤'            reduce using rule 84
	'⊥'            reduce using rule 84
	'∀'            reduce using rule 84
	'∃'            reduce using rule 84
	'¬'            reduce using rule 84
	'∧'            reduce using rule 84
	'∨'            reduce using rule 84
	'==>'          reduce using rule 84
	'<=>'          reduce using rule 84
	'('            shift, and enter state 35
			(reduce using rule 84)

	')'            reduce using rule 84
	'['            shift, and enter state 36
			(reduce using rule 84)

	']'            reduce using rule 84
	'{'            shift, and enter state 37
			(reduce using rule 84)

	'}'            reduce using rule 84
	'_'            reduce using rule 84
	'---'          reduce using rule 84
	BEGIN_LAYOUT   reduce using rule 84
	END_LAYOUT     reduce using rule 84
	%eof           reduce using rule 84

	TermArgsM      goto state 34

State 10

	PropVar -> IDENT .                                  (rule 80)

	IDENT          reduce using rule 80
	','            reduce using rule 80
	'theorem'      reduce using rule 80
	'judgment'     reduce using rule 80
	'syntax'       reduce using rule 80
	'axiom'        reduce using rule 80
	'by'           reduce using rule 80
	'for'          reduce using rule 80
	'prove'        reduce using rule 80
	':='           reduce using rule 80
	':'            reduce using rule 80
	'⊢'            reduce using rule 80
	'⊤'            reduce using rule 80
	'⊥'            reduce using rule 80
	'∀'            reduce using rule 80
	'∃'            reduce using rule 80
	'¬'            reduce using rule 80
	'∧'            reduce using rule 80
	'∨'            reduce using rule 80
	'==>'          reduce using rule 80
	'<=>'          reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	'->'           reduce using rule 80
	'_'            reduce using rule 80
	'='            reduce using rule 80
	'---'          reduce using rule 80
	BEGIN_LAYOUT   reduce using rule 80
	END_LAYOUT     reduce using rule 80
	%eof           reduce using rule 80


State 11

	Formula -> '⊤' .                                    (rule 56)

	IDENT          reduce using rule 56
	','            reduce using rule 56
	'theorem'      reduce using rule 56
	'judgment'     reduce using rule 56
	'syntax'       reduce using rule 56
	'axiom'        reduce using rule 56
	'by'           reduce using rule 56
	'for'          reduce using rule 56
	'prove'        reduce using rule 56
	'⊢'            reduce using rule 56
	'⊤'            reduce using rule 56
	'⊥'            reduce using rule 56
	'∀'            reduce using rule 56
	'∃'            reduce using rule 56
	'¬'            reduce using rule 56
	'∧'            reduce using rule 56
	'∨'            reduce using rule 56
	'==>'          reduce using rule 56
	'<=>'          reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	'_'            reduce using rule 56
	'---'          reduce using rule 56
	BEGIN_LAYOUT   reduce using rule 56
	END_LAYOUT     reduce using rule 56
	%eof           reduce using rule 56


State 12

	Formula -> '⊥' .                                    (rule 57)

	IDENT          reduce using rule 57
	','            reduce using rule 57
	'theorem'      reduce using rule 57
	'judgment'     reduce using rule 57
	'syntax'       reduce using rule 57
	'axiom'        reduce using rule 57
	'by'           reduce using rule 57
	'for'          reduce using rule 57
	'prove'        reduce using rule 57
	'⊢'            reduce using rule 57
	'⊤'            reduce using rule 57
	'⊥'            reduce using rule 57
	'∀'            reduce using rule 57
	'∃'            reduce using rule 57
	'¬'            reduce using rule 57
	'∧'            reduce using rule 57
	'∨'            reduce using rule 57
	'==>'          reduce using rule 57
	'<=>'          reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	'_'            reduce using rule 57
	'---'          reduce using rule 57
	BEGIN_LAYOUT   reduce using rule 57
	END_LAYOUT     reduce using rule 57
	%eof           reduce using rule 57


State 13

	Formula -> '∀' . B Binders ':' QFormula             (rule 64)

	IDENT          reduce using rule 69
	':'            reduce using rule 69
	'('            reduce using rule 69

	B              goto state 33

State 14

	Formula -> '∃' . B Binders ':' QFormula             (rule 65)

	IDENT          reduce using rule 69
	':'            reduce using rule 69
	'('            reduce using rule 69

	B              goto state 32

State 15

	Formula -> '¬' . Formula                            (rule 59)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 31
	Relation       goto state 8
	PropVar        goto state 9

State 16

	Formula -> '(' . Formula ')'                        (rule 66)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 30
	Relation       goto state 8
	PropVar        goto state 9

State 17

	Formula -> '[' . Formula ']'                        (rule 68)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 29
	Relation       goto state 8
	PropVar        goto state 9

State 18

	Formula -> '{' . Formula '}'                        (rule 67)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 28
	Relation       goto state 8
	PropVar        goto state 9

State 19

	Relation -> '_' .                                   (rule 78)
	Relation -> '_' . PropVar                           (rule 79)

	IDENT          shift, and enter state 10
			(reduce using rule 78)

	','            reduce using rule 78
	'theorem'      reduce using rule 78
	'judgment'     reduce using rule 78
	'syntax'       reduce using rule 78
	'axiom'        reduce using rule 78
	'by'           reduce using rule 78
	'for'          reduce using rule 78
	'prove'        reduce using rule 78
	'⊢'            reduce using rule 78
	'⊤'            reduce using rule 78
	'⊥'            reduce using rule 78
	'∀'            reduce using rule 78
	'∃'            reduce using rule 78
	'¬'            reduce using rule 78
	'∧'            reduce using rule 78
	'∨'            reduce using rule 78
	'==>'          reduce using rule 78
	'<=>'          reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	'_'            reduce using rule 78
	'---'          reduce using rule 78
	BEGIN_LAYOUT   reduce using rule 78
	END_LAYOUT     reduce using rule 78
	%eof           reduce using rule 78

	PropVar        goto state 27

State 20

	%start_parseTheorems -> Theorems .                  (rule 1)

	%eof           accept


State 21

	Theorems -> Theorem . Theorems                      (rule 42)

	'theorem'      shift, and enter state 22
	%eof           reduce using rule 43

	Theorems       goto state 26
	Theorem        goto state 21

State 22

	Theorem -> 'theorem' . IDENT ':' Assumptions '⊢' Conclusion Proof    (rule 44)
	Theorem -> 'theorem' . 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' . IDENT ':' Formula Proof      (rule 46)
	Theorem -> 'theorem' . 'schema' IDENT 'for' 'all' 'propositions' Props ':' Formula Proof    (rule 47)

	IDENT          shift, and enter state 24
	'schema'       shift, and enter state 25


State 23

	%start_parseModule -> Module .                      (rule 0)

	%eof           accept


State 24

	Theorem -> 'theorem' IDENT . ':' Assumptions '⊢' Conclusion Proof    (rule 44)
	Theorem -> 'theorem' IDENT . ':' Formula Proof      (rule 46)

	':'            shift, and enter state 65


State 25

	Theorem -> 'theorem' 'schema' . IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' . IDENT 'for' 'all' 'propositions' Props ':' Formula Proof    (rule 47)

	IDENT          shift, and enter state 64


State 26

	Theorems -> Theorem Theorems .                      (rule 42)

	%eof           reduce using rule 42


State 27

	Relation -> '_' PropVar .                           (rule 79)

	IDENT          reduce using rule 79
	','            reduce using rule 79
	'theorem'      reduce using rule 79
	'judgment'     reduce using rule 79
	'syntax'       reduce using rule 79
	'axiom'        reduce using rule 79
	'by'           reduce using rule 79
	'for'          reduce using rule 79
	'prove'        reduce using rule 79
	'⊢'            reduce using rule 79
	'⊤'            reduce using rule 79
	'⊥'            reduce using rule 79
	'∀'            reduce using rule 79
	'∃'            reduce using rule 79
	'¬'            reduce using rule 79
	'∧'            reduce using rule 79
	'∨'            reduce using rule 79
	'==>'          reduce using rule 79
	'<=>'          reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	'_'            reduce using rule 79
	'---'          reduce using rule 79
	BEGIN_LAYOUT   reduce using rule 79
	END_LAYOUT     reduce using rule 79
	%eof           reduce using rule 79


State 28

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Formula -> '{' Formula . '}'                        (rule 67)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'}'            shift, and enter state 63


State 29

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Formula -> '[' Formula . ']'                        (rule 68)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	']'            shift, and enter state 62


State 30

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Formula -> '(' Formula . ')'                        (rule 66)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	')'            shift, and enter state 61


State 31

	Formula -> '¬' Formula .                            (rule 59)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          reduce using rule 59
	','            reduce using rule 59
	'theorem'      reduce using rule 59
	'judgment'     reduce using rule 59
	'syntax'       reduce using rule 59
	'axiom'        reduce using rule 59
	'by'           reduce using rule 59
	'for'          reduce using rule 59
	'prove'        reduce using rule 59
	'⊢'            reduce using rule 59
	'⊤'            reduce using rule 59
	'⊥'            reduce using rule 59
	'∀'            reduce using rule 59
	'∃'            reduce using rule 59
	'¬'            reduce using rule 59
	'∧'            reduce using rule 59
	'∨'            reduce using rule 59
	'==>'          reduce using rule 59
	'<=>'          reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	'_'            reduce using rule 59
	'---'          reduce using rule 59
	BEGIN_LAYOUT   reduce using rule 59
	END_LAYOUT     reduce using rule 59
	%eof           reduce using rule 59


State 32

	Formula -> '∃' B . Binders ':' QFormula             (rule 65)

	IDENT          shift, and enter state 58
	':'            reduce using rule 70
	'('            shift, and enter state 59

	Binders        goto state 60
	TypeAnn        goto state 57

State 33

	Formula -> '∀' B . Binders ':' QFormula             (rule 64)

	IDENT          shift, and enter state 58
	':'            reduce using rule 70
	'('            shift, and enter state 59

	Binders        goto state 56
	TypeAnn        goto state 57

State 34

	Relation -> PropVar TermArgsM .                     (rule 77)

	IDENT          reduce using rule 77
	','            reduce using rule 77
	'theorem'      reduce using rule 77
	'judgment'     reduce using rule 77
	'syntax'       reduce using rule 77
	'axiom'        reduce using rule 77
	'by'           reduce using rule 77
	'for'          reduce using rule 77
	'prove'        reduce using rule 77
	'⊢'            reduce using rule 77
	'⊤'            reduce using rule 77
	'⊥'            reduce using rule 77
	'∀'            reduce using rule 77
	'∃'            reduce using rule 77
	'¬'            reduce using rule 77
	'∧'            reduce using rule 77
	'∨'            reduce using rule 77
	'==>'          reduce using rule 77
	'<=>'          reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'['            reduce using rule 77
	']'            reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	'_'            reduce using rule 77
	'---'          reduce using rule 77
	BEGIN_LAYOUT   reduce using rule 77
	END_LAYOUT     reduce using rule 77
	%eof           reduce using rule 77


State 35

	TermArgsM -> '(' . TArgsSep ')'                     (rule 81)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53
	')'            reduce using rule 87

	TArgsSep       goto state 55
	Term           goto state 51

State 36

	TermArgsM -> '[' . TArgsSep ']'                     (rule 82)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53
	']'            reduce using rule 87

	TArgsSep       goto state 54
	Term           goto state 51

State 37

	TermArgsM -> '{' . TArgsSep '}'                     (rule 83)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53
	'}'            reduce using rule 87

	TArgsSep       goto state 50
	Term           goto state 51

State 38

	Formula -> Formula '∧' . Formula                    (rule 60)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 49
	Relation       goto state 8
	PropVar        goto state 9

State 39

	Formula -> Formula '∨' . Formula                    (rule 61)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 48
	Relation       goto state 8
	PropVar        goto state 9

State 40

	Formula -> Formula '==>' . Formula                  (rule 62)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 47
	Relation       goto state 8
	PropVar        goto state 9

State 41

	Formula -> Formula '<=>' . Formula                  (rule 63)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 46
	Relation       goto state 8
	PropVar        goto state 9

State 42

	Module -> 'module' ModuleName . ConstantsD Aliases Axioms Syntax Judgments Theorems    (rule 4)

	'theorem'      reduce using rule 7
	'judgment'     reduce using rule 7
	'syntax'       reduce using rule 7
	'constants'    shift, and enter state 45
	'axiom'        reduce using rule 7
	'aliases'      reduce using rule 7
	%eof           reduce using rule 7

	ConstantsD     goto state 44

State 43

	ModuleName -> IDENT .                               (rule 5)

	'theorem'      reduce using rule 5
	'judgment'     reduce using rule 5
	'syntax'       reduce using rule 5
	'constants'    reduce using rule 5
	'axiom'        reduce using rule 5
	'aliases'      reduce using rule 5
	%eof           reduce using rule 5


State 44

	Module -> 'module' ModuleName ConstantsD . Aliases Axioms Syntax Judgments Theorems    (rule 4)

	'theorem'      reduce using rule 9
	'judgment'     reduce using rule 9
	'syntax'       reduce using rule 9
	'axiom'        reduce using rule 9
	'aliases'      shift, and enter state 82
	%eof           reduce using rule 9

	Aliases        goto state 81

State 45

	ConstantsD -> 'constants' . ':' Consts              (rule 6)

	':'            shift, and enter state 80


State 46

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Formula -> Formula '<=>' Formula .                  (rule 63)

	IDENT          reduce using rule 63
	','            reduce using rule 63
	'theorem'      reduce using rule 63
	'judgment'     reduce using rule 63
	'syntax'       reduce using rule 63
	'axiom'        reduce using rule 63
	'by'           reduce using rule 63
	'for'          reduce using rule 63
	'prove'        reduce using rule 63
	'⊢'            reduce using rule 63
	'⊤'            reduce using rule 63
	'⊥'            reduce using rule 63
	'∀'            reduce using rule 63
	'∃'            reduce using rule 63
	'¬'            reduce using rule 63
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            reduce using rule 63
	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	'_'            reduce using rule 63
	'---'          reduce using rule 63
	BEGIN_LAYOUT   reduce using rule 63
	END_LAYOUT     reduce using rule 63
	%eof           reduce using rule 63


State 47

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula '==>' Formula .                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          reduce using rule 62
	','            reduce using rule 62
	'theorem'      reduce using rule 62
	'judgment'     reduce using rule 62
	'syntax'       reduce using rule 62
	'axiom'        reduce using rule 62
	'by'           reduce using rule 62
	'for'          reduce using rule 62
	'prove'        reduce using rule 62
	'⊢'            reduce using rule 62
	'⊤'            reduce using rule 62
	'⊥'            reduce using rule 62
	'∀'            reduce using rule 62
	'∃'            reduce using rule 62
	'¬'            reduce using rule 62
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	'_'            reduce using rule 62
	'---'          reduce using rule 62
	BEGIN_LAYOUT   reduce using rule 62
	END_LAYOUT     reduce using rule 62
	%eof           reduce using rule 62


State 48

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula '∨' Formula .                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          reduce using rule 61
	','            reduce using rule 61
	'theorem'      reduce using rule 61
	'judgment'     reduce using rule 61
	'syntax'       reduce using rule 61
	'axiom'        reduce using rule 61
	'by'           reduce using rule 61
	'for'          reduce using rule 61
	'prove'        reduce using rule 61
	'⊢'            reduce using rule 61
	'⊤'            reduce using rule 61
	'⊥'            reduce using rule 61
	'∀'            reduce using rule 61
	'∃'            reduce using rule 61
	'¬'            reduce using rule 61
	'∧'            shift, and enter state 38
	'∨'            reduce using rule 61
	'==>'          reduce using rule 61
	'<=>'          reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	'_'            reduce using rule 61
	'---'          reduce using rule 61
	BEGIN_LAYOUT   reduce using rule 61
	END_LAYOUT     reduce using rule 61
	%eof           reduce using rule 61


State 49

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula '∧' Formula .                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          reduce using rule 60
	','            reduce using rule 60
	'theorem'      reduce using rule 60
	'judgment'     reduce using rule 60
	'syntax'       reduce using rule 60
	'axiom'        reduce using rule 60
	'by'           reduce using rule 60
	'for'          reduce using rule 60
	'prove'        reduce using rule 60
	'⊢'            reduce using rule 60
	'⊤'            reduce using rule 60
	'⊥'            reduce using rule 60
	'∀'            reduce using rule 60
	'∃'            reduce using rule 60
	'¬'            reduce using rule 60
	'∧'            reduce using rule 60
	'∨'            reduce using rule 60
	'==>'          reduce using rule 60
	'<=>'          reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	'_'            reduce using rule 60
	'---'          reduce using rule 60
	BEGIN_LAYOUT   reduce using rule 60
	END_LAYOUT     reduce using rule 60
	%eof           reduce using rule 60


State 50

	TermArgsM -> '{' TArgsSep . '}'                     (rule 83)

	'}'            shift, and enter state 79


State 51

	TArgsSep -> Term .                                  (rule 85)
	TArgsSep -> Term . ',' TArgsSep                     (rule 86)

	','            shift, and enter state 78
	')'            reduce using rule 85
	']'            reduce using rule 85
	'}'            reduce using rule 85


State 52

	Term -> IDENT . 'ᶜ' TermArgsM                       (rule 88)
	Term -> IDENT . TermArgsM                           (rule 89)

	'ᶜ'            shift, and enter state 77
	','            reduce using rule 84
	'theorem'      reduce using rule 84
	'judgment'     reduce using rule 84
	'syntax'       reduce using rule 84
	'axiom'        reduce using rule 84
	':'            reduce using rule 84
	'('            shift, and enter state 35
	')'            reduce using rule 84
	'['            shift, and enter state 36
	']'            reduce using rule 84
	'{'            shift, and enter state 37
	'}'            reduce using rule 84
	%eof           reduce using rule 84

	TermArgsM      goto state 76

State 53

	Term -> '(' . Term ')'                              (rule 90)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53

	Term           goto state 75

State 54

	TermArgsM -> '[' TArgsSep . ']'                     (rule 82)

	']'            shift, and enter state 74


State 55

	TermArgsM -> '(' TArgsSep . ')'                     (rule 81)

	')'            shift, and enter state 73


State 56

	Formula -> '∀' B Binders . ':' QFormula             (rule 64)

	':'            shift, and enter state 72


State 57

	Binders -> TypeAnn . Binders                        (rule 71)

	IDENT          shift, and enter state 58
	':'            reduce using rule 70
	'('            shift, and enter state 59

	Binders        goto state 71
	TypeAnn        goto state 57

State 58

	TypeAnn -> IDENT .                                  (rule 73)

	IDENT          reduce using rule 73
	','            reduce using rule 73
	'theorem'      reduce using rule 73
	'judgment'     reduce using rule 73
	'syntax'       reduce using rule 73
	'axiom'        reduce using rule 73
	'aliases'      reduce using rule 73
	':'            reduce using rule 73
	'('            reduce using rule 73
	%eof           reduce using rule 73


State 59

	TypeAnn -> '(' . IDENT ':' Type ')'                 (rule 72)

	IDENT          shift, and enter state 70


State 60

	Formula -> '∃' B Binders . ':' QFormula             (rule 65)

	':'            shift, and enter state 69


State 61

	Formula -> '(' Formula ')' .                        (rule 66)

	IDENT          reduce using rule 66
	','            reduce using rule 66
	'theorem'      reduce using rule 66
	'judgment'     reduce using rule 66
	'syntax'       reduce using rule 66
	'axiom'        reduce using rule 66
	'by'           reduce using rule 66
	'for'          reduce using rule 66
	'prove'        reduce using rule 66
	'⊢'            reduce using rule 66
	'⊤'            reduce using rule 66
	'⊥'            reduce using rule 66
	'∀'            reduce using rule 66
	'∃'            reduce using rule 66
	'¬'            reduce using rule 66
	'∧'            reduce using rule 66
	'∨'            reduce using rule 66
	'==>'          reduce using rule 66
	'<=>'          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	'_'            reduce using rule 66
	'---'          reduce using rule 66
	BEGIN_LAYOUT   reduce using rule 66
	END_LAYOUT     reduce using rule 66
	%eof           reduce using rule 66


State 62

	Formula -> '[' Formula ']' .                        (rule 68)

	IDENT          reduce using rule 68
	','            reduce using rule 68
	'theorem'      reduce using rule 68
	'judgment'     reduce using rule 68
	'syntax'       reduce using rule 68
	'axiom'        reduce using rule 68
	'by'           reduce using rule 68
	'for'          reduce using rule 68
	'prove'        reduce using rule 68
	'⊢'            reduce using rule 68
	'⊤'            reduce using rule 68
	'⊥'            reduce using rule 68
	'∀'            reduce using rule 68
	'∃'            reduce using rule 68
	'¬'            reduce using rule 68
	'∧'            reduce using rule 68
	'∨'            reduce using rule 68
	'==>'          reduce using rule 68
	'<=>'          reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	'_'            reduce using rule 68
	'---'          reduce using rule 68
	BEGIN_LAYOUT   reduce using rule 68
	END_LAYOUT     reduce using rule 68
	%eof           reduce using rule 68


State 63

	Formula -> '{' Formula '}' .                        (rule 67)

	IDENT          reduce using rule 67
	','            reduce using rule 67
	'theorem'      reduce using rule 67
	'judgment'     reduce using rule 67
	'syntax'       reduce using rule 67
	'axiom'        reduce using rule 67
	'by'           reduce using rule 67
	'for'          reduce using rule 67
	'prove'        reduce using rule 67
	'⊢'            reduce using rule 67
	'⊤'            reduce using rule 67
	'⊥'            reduce using rule 67
	'∀'            reduce using rule 67
	'∃'            reduce using rule 67
	'¬'            reduce using rule 67
	'∧'            reduce using rule 67
	'∨'            reduce using rule 67
	'==>'          reduce using rule 67
	'<=>'          reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	'_'            reduce using rule 67
	'---'          reduce using rule 67
	BEGIN_LAYOUT   reduce using rule 67
	END_LAYOUT     reduce using rule 67
	%eof           reduce using rule 67


State 64

	Theorem -> 'theorem' 'schema' IDENT . 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT . 'for' 'all' 'propositions' Props ':' Formula Proof    (rule 47)

	'for'          shift, and enter state 68


State 65

	Theorem -> 'theorem' IDENT ':' . Assumptions '⊢' Conclusion Proof    (rule 44)
	Theorem -> 'theorem' IDENT ':' . Formula Proof      (rule 46)

	IDENT          shift, and enter state 10
	'⊢'            reduce using rule 52
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Assumptions    goto state 66
	Formula        goto state 67
	Relation       goto state 8
	PropVar        goto state 9

State 66

	Theorem -> 'theorem' IDENT ':' Assumptions . '⊢' Conclusion Proof    (rule 44)

	'⊢'            shift, and enter state 109


State 67

	Theorem -> 'theorem' IDENT ':' Formula . Proof      (rule 46)
	Assumptions -> Formula . AssumpsRest                (rule 51)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          shift, and enter state 104
	','            shift, and enter state 105
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊢'            reduce using rule 54
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	%eof           reduce using rule 95

	AssumpsRest    goto state 97
	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 99
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 68

	Theorem -> 'theorem' 'schema' IDENT 'for' . 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT 'for' . 'all' 'propositions' Props ':' Formula Proof    (rule 47)

	'all'          shift, and enter state 96


State 69

	Formula -> '∃' B Binders ':' . QFormula             (rule 65)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 92
	QFormula       goto state 95
	Relation       goto state 8
	PropVar        goto state 9

State 70

	TypeAnn -> '(' IDENT . ':' Type ')'                 (rule 72)

	':'            shift, and enter state 94


State 71

	Binders -> TypeAnn Binders .                        (rule 71)

	':'            reduce using rule 71


State 72

	Formula -> '∀' B Binders ':' . QFormula             (rule 64)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 92
	QFormula       goto state 93
	Relation       goto state 8
	PropVar        goto state 9

State 73

	TermArgsM -> '(' TArgsSep ')' .                     (rule 81)

	IDENT          reduce using rule 81
	','            reduce using rule 81
	'theorem'      reduce using rule 81
	'judgment'     reduce using rule 81
	'syntax'       reduce using rule 81
	'axiom'        reduce using rule 81
	'by'           reduce using rule 81
	'for'          reduce using rule 81
	'prove'        reduce using rule 81
	':'            reduce using rule 81
	'⊢'            reduce using rule 81
	'⊤'            reduce using rule 81
	'⊥'            reduce using rule 81
	'∀'            reduce using rule 81
	'∃'            reduce using rule 81
	'¬'            reduce using rule 81
	'∧'            reduce using rule 81
	'∨'            reduce using rule 81
	'==>'          reduce using rule 81
	'<=>'          reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'['            reduce using rule 81
	']'            reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	'_'            reduce using rule 81
	'---'          reduce using rule 81
	BEGIN_LAYOUT   reduce using rule 81
	END_LAYOUT     reduce using rule 81
	%eof           reduce using rule 81


State 74

	TermArgsM -> '[' TArgsSep ']' .                     (rule 82)

	IDENT          reduce using rule 82
	','            reduce using rule 82
	'theorem'      reduce using rule 82
	'judgment'     reduce using rule 82
	'syntax'       reduce using rule 82
	'axiom'        reduce using rule 82
	'by'           reduce using rule 82
	'for'          reduce using rule 82
	'prove'        reduce using rule 82
	':'            reduce using rule 82
	'⊢'            reduce using rule 82
	'⊤'            reduce using rule 82
	'⊥'            reduce using rule 82
	'∀'            reduce using rule 82
	'∃'            reduce using rule 82
	'¬'            reduce using rule 82
	'∧'            reduce using rule 82
	'∨'            reduce using rule 82
	'==>'          reduce using rule 82
	'<=>'          reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'['            reduce using rule 82
	']'            reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	'_'            reduce using rule 82
	'---'          reduce using rule 82
	BEGIN_LAYOUT   reduce using rule 82
	END_LAYOUT     reduce using rule 82
	%eof           reduce using rule 82


State 75

	Term -> '(' Term . ')'                              (rule 90)

	')'            shift, and enter state 91


State 76

	Term -> IDENT TermArgsM .                           (rule 89)

	','            reduce using rule 89
	'theorem'      reduce using rule 89
	'judgment'     reduce using rule 89
	'syntax'       reduce using rule 89
	'axiom'        reduce using rule 89
	':'            reduce using rule 89
	')'            reduce using rule 89
	']'            reduce using rule 89
	'}'            reduce using rule 89
	%eof           reduce using rule 89


State 77

	Term -> IDENT 'ᶜ' . TermArgsM                       (rule 88)

	','            reduce using rule 84
	'theorem'      reduce using rule 84
	'judgment'     reduce using rule 84
	'syntax'       reduce using rule 84
	'axiom'        reduce using rule 84
	':'            reduce using rule 84
	'('            shift, and enter state 35
	')'            reduce using rule 84
	'['            shift, and enter state 36
	']'            reduce using rule 84
	'{'            shift, and enter state 37
	'}'            reduce using rule 84
	%eof           reduce using rule 84

	TermArgsM      goto state 90

State 78

	TArgsSep -> Term ',' . TArgsSep                     (rule 86)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53
	')'            reduce using rule 87
	']'            reduce using rule 87
	'}'            reduce using rule 87

	TArgsSep       goto state 89
	Term           goto state 51

State 79

	TermArgsM -> '{' TArgsSep '}' .                     (rule 83)

	IDENT          reduce using rule 83
	','            reduce using rule 83
	'theorem'      reduce using rule 83
	'judgment'     reduce using rule 83
	'syntax'       reduce using rule 83
	'axiom'        reduce using rule 83
	'by'           reduce using rule 83
	'for'          reduce using rule 83
	'prove'        reduce using rule 83
	':'            reduce using rule 83
	'⊢'            reduce using rule 83
	'⊤'            reduce using rule 83
	'⊥'            reduce using rule 83
	'∀'            reduce using rule 83
	'∃'            reduce using rule 83
	'¬'            reduce using rule 83
	'∧'            reduce using rule 83
	'∨'            reduce using rule 83
	'==>'          reduce using rule 83
	'<=>'          reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	'_'            reduce using rule 83
	'---'          reduce using rule 83
	BEGIN_LAYOUT   reduce using rule 83
	END_LAYOUT     reduce using rule 83
	%eof           reduce using rule 83


State 80

	ConstantsD -> 'constants' ':' . Consts              (rule 6)

	IDENT          shift, and enter state 58
	'('            shift, and enter state 59

	Consts         goto state 87
	TypeAnn        goto state 88

State 81

	Module -> 'module' ModuleName ConstantsD Aliases . Axioms Syntax Judgments Theorems    (rule 4)

	'theorem'      reduce using rule 16
	'judgment'     reduce using rule 16
	'syntax'       reduce using rule 16
	'axiom'        shift, and enter state 86
	%eof           reduce using rule 16

	Axioms         goto state 84
	Axs            goto state 85

State 82

	Aliases -> 'aliases' . ':' Alis                     (rule 8)

	':'            shift, and enter state 83


State 83

	Aliases -> 'aliases' ':' . Alis                     (rule 8)

	IDENT          shift, and enter state 141

	Alis           goto state 138
	Alias          goto state 139
	Ali            goto state 140

State 84

	Module -> 'module' ModuleName ConstantsD Aliases Axioms . Syntax Judgments Theorems    (rule 4)

	'theorem'      reduce using rule 20
	'judgment'     reduce using rule 20
	'syntax'       shift, and enter state 137
	%eof           reduce using rule 20

	Syntax         goto state 135
	Syn            goto state 136

State 85

	Axioms -> Axs . Axioms                              (rule 17)

	'theorem'      reduce using rule 16
	'judgment'     reduce using rule 16
	'syntax'       reduce using rule 16
	'axiom'        shift, and enter state 86
	%eof           reduce using rule 16

	Axioms         goto state 134
	Axs            goto state 85

State 86

	Axs -> 'axiom' . IDENT ':' Formula                  (rule 18)

	IDENT          shift, and enter state 133


State 87

	ConstantsD -> 'constants' ':' Consts .              (rule 6)

	'theorem'      reduce using rule 6
	'judgment'     reduce using rule 6
	'syntax'       reduce using rule 6
	'axiom'        reduce using rule 6
	'aliases'      reduce using rule 6
	%eof           reduce using rule 6


State 88

	Consts -> TypeAnn .                                 (rule 14)
	Consts -> TypeAnn . ',' Consts                      (rule 15)

	','            shift, and enter state 132
	'theorem'      reduce using rule 14
	'judgment'     reduce using rule 14
	'syntax'       reduce using rule 14
	'axiom'        reduce using rule 14
	'aliases'      reduce using rule 14
	%eof           reduce using rule 14


State 89

	TArgsSep -> Term ',' TArgsSep .                     (rule 86)

	')'            reduce using rule 86
	']'            reduce using rule 86
	'}'            reduce using rule 86


State 90

	Term -> IDENT 'ᶜ' TermArgsM .                       (rule 88)

	','            reduce using rule 88
	'theorem'      reduce using rule 88
	'judgment'     reduce using rule 88
	'syntax'       reduce using rule 88
	'axiom'        reduce using rule 88
	':'            reduce using rule 88
	')'            reduce using rule 88
	']'            reduce using rule 88
	'}'            reduce using rule 88
	%eof           reduce using rule 88


State 91

	Term -> '(' Term ')' .                              (rule 90)

	','            reduce using rule 90
	'theorem'      reduce using rule 90
	'judgment'     reduce using rule 90
	'syntax'       reduce using rule 90
	'axiom'        reduce using rule 90
	':'            reduce using rule 90
	')'            reduce using rule 90
	']'            reduce using rule 90
	'}'            reduce using rule 90
	%eof           reduce using rule 90


State 92

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	QFormula -> Formula .                               (rule 76)

	IDENT          reduce using rule 76
	','            reduce using rule 76
	'theorem'      reduce using rule 76
	'judgment'     reduce using rule 76
	'syntax'       reduce using rule 76
	'axiom'        reduce using rule 76
	'by'           reduce using rule 76
	'for'          reduce using rule 76
	'prove'        reduce using rule 76
	'⊢'            reduce using rule 76
	'⊤'            reduce using rule 76
	'⊥'            reduce using rule 76
	'∀'            reduce using rule 76
	'∃'            reduce using rule 76
	'¬'            reduce using rule 76
	'∧'            shift, and enter state 38
			(reduce using rule 76)

	'∨'            shift, and enter state 39
			(reduce using rule 76)

	'==>'          shift, and enter state 40
			(reduce using rule 76)

	'<=>'          shift, and enter state 41
			(reduce using rule 76)

	'('            reduce using rule 76
	')'            reduce using rule 76
	'['            reduce using rule 76
	']'            reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	'_'            reduce using rule 76
	'---'          reduce using rule 76
	BEGIN_LAYOUT   reduce using rule 76
	END_LAYOUT     reduce using rule 76
	%eof           reduce using rule 76


State 93

	Formula -> '∀' B Binders ':' QFormula .             (rule 64)

	IDENT          reduce using rule 64
	','            reduce using rule 64
	'theorem'      reduce using rule 64
	'judgment'     reduce using rule 64
	'syntax'       reduce using rule 64
	'axiom'        reduce using rule 64
	'by'           reduce using rule 64
	'for'          reduce using rule 64
	'prove'        reduce using rule 64
	'⊢'            reduce using rule 64
	'⊤'            reduce using rule 64
	'⊥'            reduce using rule 64
	'∀'            reduce using rule 64
	'∃'            reduce using rule 64
	'¬'            reduce using rule 64
	'∧'            reduce using rule 64
	'∨'            reduce using rule 64
	'==>'          reduce using rule 64
	'<=>'          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	'_'            reduce using rule 64
	'---'          reduce using rule 64
	BEGIN_LAYOUT   reduce using rule 64
	END_LAYOUT     reduce using rule 64
	%eof           reduce using rule 64


State 94

	TypeAnn -> '(' IDENT ':' . Type ')'                 (rule 72)

	IDENT          shift, and enter state 10

	Type           goto state 130
	PropVar        goto state 131

State 95

	Formula -> '∃' B Binders ':' QFormula .             (rule 65)

	IDENT          reduce using rule 65
	','            reduce using rule 65
	'theorem'      reduce using rule 65
	'judgment'     reduce using rule 65
	'syntax'       reduce using rule 65
	'axiom'        reduce using rule 65
	'by'           reduce using rule 65
	'for'          reduce using rule 65
	'prove'        reduce using rule 65
	'⊢'            reduce using rule 65
	'⊤'            reduce using rule 65
	'⊥'            reduce using rule 65
	'∀'            reduce using rule 65
	'∃'            reduce using rule 65
	'¬'            reduce using rule 65
	'∧'            reduce using rule 65
	'∨'            reduce using rule 65
	'==>'          reduce using rule 65
	'<=>'          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	'_'            reduce using rule 65
	'---'          reduce using rule 65
	BEGIN_LAYOUT   reduce using rule 65
	END_LAYOUT     reduce using rule 65
	%eof           reduce using rule 65


State 96

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' . 'propositions' Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' . 'propositions' Props ':' Formula Proof    (rule 47)

	'propositions' shift, and enter state 129


State 97

	Assumptions -> Formula AssumpsRest .                (rule 51)

	'⊢'            reduce using rule 51


State 98

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Claim -> Formula . Just                             (rule 113)

	'by'           shift, and enter state 128
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41

	Just           goto state 127

State 99

	Theorem -> 'theorem' IDENT ':' Formula Proof .      (rule 46)

	'theorem'      reduce using rule 46
	%eof           reduce using rule 46


State 100

	Proof -> Subproof . Proof                           (rule 91)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	END_LAYOUT     reduce using rule 95
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 126
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 101

	Subproof -> SubProofAux .                           (rule 96)

	IDENT          reduce using rule 96
	'theorem'      reduce using rule 96
	'prove'        reduce using rule 96
	'⊤'            reduce using rule 96
	'⊥'            reduce using rule 96
	'∀'            reduce using rule 96
	'∃'            reduce using rule 96
	'¬'            reduce using rule 96
	'('            reduce using rule 96
	'['            reduce using rule 96
	'{'            reduce using rule 96
	'_'            reduce using rule 96
	BEGIN_LAYOUT   reduce using rule 96
	END_LAYOUT     reduce using rule 96
	%eof           reduce using rule 96


State 102

	Proof -> Claim . Proof                              (rule 92)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	END_LAYOUT     reduce using rule 95
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 125
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 103

	Subproof -> Name . ':' SubProofAux                  (rule 97)
	Claim -> Name . ':' Formula Just                    (rule 112)

	':'            shift, and enter state 124


State 104

	PropVar -> IDENT .                                  (rule 80)
	Name -> IDENT .                                     (rule 114)

	IDENT          reduce using rule 80
	'by'           reduce using rule 80
	'for'          reduce using rule 80
	':'            reduce using rule 114
	'⊤'            reduce using rule 80
	'⊥'            reduce using rule 80
	'∀'            reduce using rule 80
	'∃'            reduce using rule 80
	'¬'            reduce using rule 80
	'∧'            reduce using rule 80
	'∨'            reduce using rule 80
	'==>'          reduce using rule 80
	'<=>'          reduce using rule 80
	'('            reduce using rule 80
	'['            reduce using rule 80
	'{'            reduce using rule 80
	'_'            reduce using rule 80
	'---'          reduce using rule 80


State 105

	AssumpsRest -> ',' . Formula AssumpsRest            (rule 53)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 123
	Relation       goto state 8
	PropVar        goto state 9

State 106

	Proof -> 'prove' . Formula Proof                    (rule 94)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 122
	Relation       goto state 8
	PropVar        goto state 9

State 107

	Relation -> '_' .                                   (rule 78)
	Relation -> '_' . PropVar                           (rule 79)
	Proof -> '_' . PropVar ':=' Formula Proof           (rule 93)
	Name -> '_' .                                       (rule 115)

	IDENT          shift, and enter state 10
	'by'           reduce using rule 78
	':'            reduce using rule 115
	'∧'            reduce using rule 78
	'∨'            reduce using rule 78
	'==>'          reduce using rule 78
	'<=>'          reduce using rule 78

	PropVar        goto state 121

State 108

	SubProofAux -> BEGIN_LAYOUT . Assumption '---' Proof END_LAYOUT    (rule 98)

	IDENT          shift, and enter state 104
	'for'          shift, and enter state 118
	'all'          shift, and enter state 119
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 120
	'---'          reduce using rule 107

	Formula        goto state 112
	Relation       goto state 8
	PropVar        goto state 9
	Assumption     goto state 113
	ForAll         goto state 114
	AssumedFormula goto state 115
	AssumedFormulaegoto state 116
	Name           goto state 117

State 109

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' . Conclusion Proof    (rule 44)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Conclusion     goto state 110
	Formula        goto state 111
	Relation       goto state 8
	PropVar        goto state 9

State 110

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion . Proof    (rule 44)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 177
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 111

	Conclusion -> Formula .                             (rule 55)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          reduce using rule 55
	'theorem'      reduce using rule 55
	'prove'        reduce using rule 55
	'⊤'            reduce using rule 55
	'⊥'            reduce using rule 55
	'∀'            reduce using rule 55
	'∃'            reduce using rule 55
	'¬'            reduce using rule 55
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            reduce using rule 55
	'['            reduce using rule 55
	'{'            reduce using rule 55
	'_'            reduce using rule 55
	BEGIN_LAYOUT   reduce using rule 55
	%eof           reduce using rule 55


State 112

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	AssumedFormula -> Formula .                         (rule 105)

	IDENT          reduce using rule 105
	'for'          reduce using rule 105
	'⊤'            reduce using rule 105
	'⊥'            reduce using rule 105
	'∀'            reduce using rule 105
	'∃'            reduce using rule 105
	'¬'            reduce using rule 105
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            reduce using rule 105
	'['            reduce using rule 105
	'{'            reduce using rule 105
	'_'            reduce using rule 105
	'---'          reduce using rule 105


State 113

	SubProofAux -> BEGIN_LAYOUT Assumption . '---' Proof END_LAYOUT    (rule 98)

	'---'          shift, and enter state 176


State 114

	Assumption -> ForAll . Rigids                       (rule 99)

	IDENT          shift, and enter state 174
	'('            shift, and enter state 175

	Rigids         goto state 172
	TypeAnn1       goto state 173

State 115

	Assumption -> AssumedFormula . 'for' 'some' Rigids    (rule 101)
	AssumedFormulae -> AssumedFormula . AssumedFormulae    (rule 106)

	IDENT          shift, and enter state 104
	'for'          shift, and enter state 171
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 120
	'---'          reduce using rule 107

	Formula        goto state 112
	Relation       goto state 8
	PropVar        goto state 9
	AssumedFormula goto state 169
	AssumedFormulaegoto state 170
	Name           goto state 117

State 116

	Assumption -> AssumedFormulae .                     (rule 100)

	'---'          reduce using rule 100


State 117

	AssumedFormula -> Name . ':' Formula                (rule 104)

	':'            shift, and enter state 168


State 118

	ForAll -> 'for' . 'all'                             (rule 103)

	'all'          shift, and enter state 167


State 119

	ForAll -> 'all' .                                   (rule 102)

	IDENT          reduce using rule 102
	'('            reduce using rule 102


State 120

	Relation -> '_' .                                   (rule 78)
	Relation -> '_' . PropVar                           (rule 79)
	Name -> '_' .                                       (rule 115)

	IDENT          shift, and enter state 10
			(reduce using rule 78)

	'for'          reduce using rule 78
	':'            reduce using rule 115
	'⊤'            reduce using rule 78
	'⊥'            reduce using rule 78
	'∀'            reduce using rule 78
	'∃'            reduce using rule 78
	'¬'            reduce using rule 78
	'∧'            reduce using rule 78
	'∨'            reduce using rule 78
	'==>'          reduce using rule 78
	'<=>'          reduce using rule 78
	'('            reduce using rule 78
	'['            reduce using rule 78
	'{'            reduce using rule 78
	'_'            reduce using rule 78
	'---'          reduce using rule 78

	PropVar        goto state 27

State 121

	Relation -> '_' PropVar .                           (rule 79)
	Proof -> '_' PropVar . ':=' Formula Proof           (rule 93)

	'by'           reduce using rule 79
	':='           shift, and enter state 166
	'∧'            reduce using rule 79
	'∨'            reduce using rule 79
	'==>'          reduce using rule 79
	'<=>'          reduce using rule 79


State 122

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Proof -> 'prove' Formula . Proof                    (rule 94)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	END_LAYOUT     reduce using rule 95
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 165
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 123

	AssumpsRest -> ',' Formula . AssumpsRest            (rule 53)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	','            shift, and enter state 105
	'⊢'            reduce using rule 54
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41

	AssumpsRest    goto state 164

State 124

	Subproof -> Name ':' . SubProofAux                  (rule 97)
	Claim -> Name ':' . Formula Just                    (rule 112)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19
	BEGIN_LAYOUT   shift, and enter state 108

	Formula        goto state 162
	Relation       goto state 8
	PropVar        goto state 9
	SubProofAux    goto state 163

State 125

	Proof -> Claim Proof .                              (rule 92)

	'theorem'      reduce using rule 92
	END_LAYOUT     reduce using rule 92
	%eof           reduce using rule 92


State 126

	Proof -> Subproof Proof .                           (rule 91)

	'theorem'      reduce using rule 91
	END_LAYOUT     reduce using rule 91
	%eof           reduce using rule 91


State 127

	Claim -> Formula Just .                             (rule 113)

	IDENT          reduce using rule 113
	'theorem'      reduce using rule 113
	'prove'        reduce using rule 113
	'⊤'            reduce using rule 113
	'⊥'            reduce using rule 113
	'∀'            reduce using rule 113
	'∃'            reduce using rule 113
	'¬'            reduce using rule 113
	'('            reduce using rule 113
	'['            reduce using rule 113
	'{'            reduce using rule 113
	'_'            reduce using rule 113
	BEGIN_LAYOUT   reduce using rule 113
	END_LAYOUT     reduce using rule 113
	%eof           reduce using rule 113


State 128

	Just -> 'by' . 'rule' RuleKind OnIdents             (rule 116)
	Just -> 'by' . 'induction' ':' Cases                (rule 117)
	Just -> 'by' . 'unproved'                           (rule 118)
	Just -> 'by' . 'axiom' IDENT                        (rule 119)
	Just -> 'by' . 'theorem' IDENT OnIdents             (rule 120)
	Just -> 'by' . 'case' 'analysis' 'on' Term ':' Cases    (rule 121)

	'theorem'      shift, and enter state 156
	'axiom'        shift, and enter state 157
	'rule'         shift, and enter state 158
	'induction'    shift, and enter state 159
	'unproved'     shift, and enter state 160
	'case'         shift, and enter state 161


State 129

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' . Props ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' . Props ':' Formula Proof    (rule 47)

	IDENT          shift, and enter state 10

	Props          goto state 153
	PropsAux       goto state 154
	PropVar        goto state 155

State 130

	TypeAnn -> '(' IDENT ':' Type . ')'                 (rule 72)
	Type -> Type . '->' Type                            (rule 75)

	')'            shift, and enter state 151
	'->'           shift, and enter state 152


State 131

	Type -> PropVar .                                   (rule 74)

	','            reduce using rule 74
	')'            reduce using rule 74
	'->'           reduce using rule 74


State 132

	Consts -> TypeAnn ',' . Consts                      (rule 15)

	IDENT          shift, and enter state 58
	'('            shift, and enter state 59

	Consts         goto state 150
	TypeAnn        goto state 88

State 133

	Axs -> 'axiom' IDENT . ':' Formula                  (rule 18)

	':'            shift, and enter state 149


State 134

	Axioms -> Axs Axioms .                              (rule 17)

	'theorem'      reduce using rule 17
	'judgment'     reduce using rule 17
	'syntax'       reduce using rule 17
	%eof           reduce using rule 17


State 135

	Module -> 'module' ModuleName ConstantsD Aliases Axioms Syntax . Judgments Theorems    (rule 4)

	'theorem'      reduce using rule 31
	'judgment'     shift, and enter state 148
	%eof           reduce using rule 31

	Judgments      goto state 146
	Jud            goto state 147

State 136

	Syntax -> Syn . Syntax                              (rule 19)

	'theorem'      reduce using rule 20
	'judgment'     reduce using rule 20
	'syntax'       shift, and enter state 137
	%eof           reduce using rule 20

	Syntax         goto state 145
	Syn            goto state 136

State 137

	Syn -> 'syntax' . PropVar Constructors              (rule 21)

	IDENT          shift, and enter state 10

	PropVar        goto state 144

State 138

	Aliases -> 'aliases' ':' Alis .                     (rule 8)

	'theorem'      reduce using rule 8
	'judgment'     reduce using rule 8
	'syntax'       reduce using rule 8
	'axiom'        reduce using rule 8
	%eof           reduce using rule 8


State 139

	Alis -> Alias .                                     (rule 10)
	Alis -> Alias . ',' Alis                            (rule 11)

	','            shift, and enter state 143
	'theorem'      reduce using rule 10
	'judgment'     reduce using rule 10
	'syntax'       reduce using rule 10
	'axiom'        reduce using rule 10
	%eof           reduce using rule 10


State 140

	Alias -> Ali . '=' Term                             (rule 12)

	'='            shift, and enter state 142


State 141

	Ali -> IDENT .                                      (rule 13)

	'='            reduce using rule 13


State 142

	Alias -> Ali '=' . Term                             (rule 12)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53

	Term           goto state 201

State 143

	Alis -> Alias ',' . Alis                            (rule 11)

	IDENT          shift, and enter state 141

	Alis           goto state 200
	Alias          goto state 139
	Ali            goto state 140

State 144

	Syn -> 'syntax' PropVar . Constructors              (rule 21)

	'theorem'      reduce using rule 23
	'judgment'     reduce using rule 23
	'syntax'       reduce using rule 23
	'='            shift, and enter state 199
	%eof           reduce using rule 23

	Constructors   goto state 198

State 145

	Syntax -> Syn Syntax .                              (rule 19)

	'theorem'      reduce using rule 19
	'judgment'     reduce using rule 19
	%eof           reduce using rule 19


State 146

	Module -> 'module' ModuleName ConstantsD Aliases Axioms Syntax Judgments . Theorems    (rule 4)

	'theorem'      shift, and enter state 22
	%eof           reduce using rule 43

	Theorems       goto state 197
	Theorem        goto state 21

State 147

	Judgments -> Jud . Judgments                        (rule 30)

	'theorem'      reduce using rule 31
	'judgment'     shift, and enter state 148
	%eof           reduce using rule 31

	Judgments      goto state 196
	Jud            goto state 147

State 148

	Jud -> 'judgment' . IDENT '=' Constructor Rules     (rule 32)

	IDENT          shift, and enter state 195


State 149

	Axs -> 'axiom' IDENT ':' . Formula                  (rule 18)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 194
	Relation       goto state 8
	PropVar        goto state 9

State 150

	Consts -> TypeAnn ',' Consts .                      (rule 15)

	'theorem'      reduce using rule 15
	'judgment'     reduce using rule 15
	'syntax'       reduce using rule 15
	'axiom'        reduce using rule 15
	'aliases'      reduce using rule 15
	%eof           reduce using rule 15


State 151

	TypeAnn -> '(' IDENT ':' Type ')' .                 (rule 72)

	IDENT          reduce using rule 72
	','            reduce using rule 72
	'theorem'      reduce using rule 72
	'judgment'     reduce using rule 72
	'syntax'       reduce using rule 72
	'axiom'        reduce using rule 72
	'aliases'      reduce using rule 72
	':'            reduce using rule 72
	'('            reduce using rule 72
	%eof           reduce using rule 72


State 152

	Type -> Type '->' . Type                            (rule 75)

	IDENT          shift, and enter state 10

	Type           goto state 193
	PropVar        goto state 131

State 153

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props . ':' Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props . ':' Formula Proof    (rule 47)

	':'            shift, and enter state 192


State 154

	Props -> PropsAux .                                 (rule 48)

	':'            reduce using rule 48


State 155

	PropsAux -> PropVar .                               (rule 49)
	PropsAux -> PropVar . ',' PropsAux                  (rule 50)

	','            shift, and enter state 191
	':'            reduce using rule 49


State 156

	Just -> 'by' 'theorem' . IDENT OnIdents             (rule 120)

	IDENT          shift, and enter state 190


State 157

	Just -> 'by' 'axiom' . IDENT                        (rule 119)

	IDENT          shift, and enter state 189


State 158

	Just -> 'by' 'rule' . RuleKind OnIdents             (rule 116)

	IDENT          shift, and enter state 188

	RuleKind       goto state 187

State 159

	Just -> 'by' 'induction' . ':' Cases                (rule 117)

	':'            shift, and enter state 186


State 160

	Just -> 'by' 'unproved' .                           (rule 118)

	IDENT          reduce using rule 118
	'theorem'      reduce using rule 118
	'prove'        reduce using rule 118
	'⊤'            reduce using rule 118
	'⊥'            reduce using rule 118
	'∀'            reduce using rule 118
	'∃'            reduce using rule 118
	'¬'            reduce using rule 118
	'('            reduce using rule 118
	'['            reduce using rule 118
	'{'            reduce using rule 118
	'_'            reduce using rule 118
	BEGIN_LAYOUT   reduce using rule 118
	END_LAYOUT     reduce using rule 118
	%eof           reduce using rule 118


State 161

	Just -> 'by' 'case' . 'analysis' 'on' Term ':' Cases    (rule 121)

	'analysis'     shift, and enter state 185


State 162

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Claim -> Name ':' Formula . Just                    (rule 112)

	'by'           shift, and enter state 128
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41

	Just           goto state 184

State 163

	Subproof -> Name ':' SubProofAux .                  (rule 97)

	IDENT          reduce using rule 97
	'theorem'      reduce using rule 97
	'prove'        reduce using rule 97
	'⊤'            reduce using rule 97
	'⊥'            reduce using rule 97
	'∀'            reduce using rule 97
	'∃'            reduce using rule 97
	'¬'            reduce using rule 97
	'('            reduce using rule 97
	'['            reduce using rule 97
	'{'            reduce using rule 97
	'_'            reduce using rule 97
	BEGIN_LAYOUT   reduce using rule 97
	END_LAYOUT     reduce using rule 97
	%eof           reduce using rule 97


State 164

	AssumpsRest -> ',' Formula AssumpsRest .            (rule 53)

	'⊢'            reduce using rule 53


State 165

	Proof -> 'prove' Formula Proof .                    (rule 94)

	'theorem'      reduce using rule 94
	END_LAYOUT     reduce using rule 94
	%eof           reduce using rule 94


State 166

	Proof -> '_' PropVar ':=' . Formula Proof           (rule 93)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 183
	Relation       goto state 8
	PropVar        goto state 9

State 167

	ForAll -> 'for' 'all' .                             (rule 103)

	IDENT          reduce using rule 103
	'('            reduce using rule 103


State 168

	AssumedFormula -> Name ':' . Formula                (rule 104)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 182
	Relation       goto state 8
	PropVar        goto state 9

State 169

	AssumedFormulae -> AssumedFormula . AssumedFormulae    (rule 106)

	IDENT          shift, and enter state 104
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 120
	'---'          reduce using rule 107

	Formula        goto state 112
	Relation       goto state 8
	PropVar        goto state 9
	AssumedFormula goto state 169
	AssumedFormulaegoto state 170
	Name           goto state 117

State 170

	AssumedFormulae -> AssumedFormula AssumedFormulae .    (rule 106)

	'---'          reduce using rule 106


State 171

	Assumption -> AssumedFormula 'for' . 'some' Rigids    (rule 101)

	'some'         shift, and enter state 181


State 172

	Assumption -> ForAll Rigids .                       (rule 99)

	'---'          reduce using rule 99


State 173

	Rigids -> TypeAnn1 .                                (rule 108)
	Rigids -> TypeAnn1 . ',' Rigids                     (rule 109)

	','            shift, and enter state 180
	'---'          reduce using rule 108


State 174

	TypeAnn1 -> IDENT .                                 (rule 111)

	','            reduce using rule 111
	'---'          reduce using rule 111


State 175

	TypeAnn1 -> '(' . IDENT ':' PropVar ')'             (rule 110)

	IDENT          shift, and enter state 179


State 176

	SubProofAux -> BEGIN_LAYOUT Assumption '---' . Proof END_LAYOUT    (rule 98)

	IDENT          shift, and enter state 104
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	END_LAYOUT     reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 178
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 177

	Theorem -> 'theorem' IDENT ':' Assumptions '⊢' Conclusion Proof .    (rule 44)

	'theorem'      reduce using rule 44
	%eof           reduce using rule 44


State 178

	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof . END_LAYOUT    (rule 98)

	END_LAYOUT     shift, and enter state 219


State 179

	TypeAnn1 -> '(' IDENT . ':' PropVar ')'             (rule 110)

	':'            shift, and enter state 218


State 180

	Rigids -> TypeAnn1 ',' . Rigids                     (rule 109)

	IDENT          shift, and enter state 174
	'('            shift, and enter state 175

	Rigids         goto state 217
	TypeAnn1       goto state 173

State 181

	Assumption -> AssumedFormula 'for' 'some' . Rigids    (rule 101)

	IDENT          shift, and enter state 174
	'('            shift, and enter state 175

	Rigids         goto state 216
	TypeAnn1       goto state 173

State 182

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	AssumedFormula -> Name ':' Formula .                (rule 104)

	IDENT          reduce using rule 104
	'for'          reduce using rule 104
	'⊤'            reduce using rule 104
	'⊥'            reduce using rule 104
	'∀'            reduce using rule 104
	'∃'            reduce using rule 104
	'¬'            reduce using rule 104
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            reduce using rule 104
	'['            reduce using rule 104
	'{'            reduce using rule 104
	'_'            reduce using rule 104
	'---'          reduce using rule 104


State 183

	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)
	Proof -> '_' PropVar ':=' Formula . Proof           (rule 93)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	END_LAYOUT     reduce using rule 95
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 215
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 184

	Claim -> Name ':' Formula Just .                    (rule 112)

	IDENT          reduce using rule 112
	'theorem'      reduce using rule 112
	'prove'        reduce using rule 112
	'⊤'            reduce using rule 112
	'⊥'            reduce using rule 112
	'∀'            reduce using rule 112
	'∃'            reduce using rule 112
	'¬'            reduce using rule 112
	'('            reduce using rule 112
	'['            reduce using rule 112
	'{'            reduce using rule 112
	'_'            reduce using rule 112
	BEGIN_LAYOUT   reduce using rule 112
	END_LAYOUT     reduce using rule 112
	%eof           reduce using rule 112


State 185

	Just -> 'by' 'case' 'analysis' . 'on' Term ':' Cases    (rule 121)

	'on'           shift, and enter state 214


State 186

	Just -> 'by' 'induction' ':' . Cases                (rule 117)

	IDENT          reduce using rule 123
	'theorem'      reduce using rule 123
	'case'         shift, and enter state 213
	'prove'        reduce using rule 123
	'⊤'            reduce using rule 123
	'⊥'            reduce using rule 123
	'∀'            reduce using rule 123
	'∃'            reduce using rule 123
	'¬'            reduce using rule 123
	'('            reduce using rule 123
	'['            reduce using rule 123
	'{'            reduce using rule 123
	'_'            reduce using rule 123
	BEGIN_LAYOUT   reduce using rule 123
	END_LAYOUT     reduce using rule 123
	%eof           reduce using rule 123

	Cases          goto state 211
	Case           goto state 212

State 187

	Just -> 'by' 'rule' RuleKind . OnIdents             (rule 116)

	IDENT          reduce using rule 137
	'theorem'      reduce using rule 137
	'on'           shift, and enter state 209
	'prove'        reduce using rule 137
	'⊤'            reduce using rule 137
	'⊥'            reduce using rule 137
	'∀'            reduce using rule 137
	'∃'            reduce using rule 137
	'¬'            reduce using rule 137
	'('            reduce using rule 137
	'['            reduce using rule 137
	'{'            reduce using rule 137
	'_'            reduce using rule 137
	BEGIN_LAYOUT   reduce using rule 137
	END_LAYOUT     reduce using rule 137
	%eof           reduce using rule 137

	OnIdents       goto state 210

State 188

	RuleKind -> IDENT .                                 (rule 135)

	IDENT          reduce using rule 135
	'theorem'      reduce using rule 135
	'on'           reduce using rule 135
	'prove'        reduce using rule 135
	'⊤'            reduce using rule 135
	'⊥'            reduce using rule 135
	'∀'            reduce using rule 135
	'∃'            reduce using rule 135
	'¬'            reduce using rule 135
	'('            reduce using rule 135
	'['            reduce using rule 135
	'{'            reduce using rule 135
	'_'            reduce using rule 135
	BEGIN_LAYOUT   reduce using rule 135
	END_LAYOUT     reduce using rule 135
	%eof           reduce using rule 135


State 189

	Just -> 'by' 'axiom' IDENT .                        (rule 119)

	IDENT          reduce using rule 119
	'theorem'      reduce using rule 119
	'prove'        reduce using rule 119
	'⊤'            reduce using rule 119
	'⊥'            reduce using rule 119
	'∀'            reduce using rule 119
	'∃'            reduce using rule 119
	'¬'            reduce using rule 119
	'('            reduce using rule 119
	'['            reduce using rule 119
	'{'            reduce using rule 119
	'_'            reduce using rule 119
	BEGIN_LAYOUT   reduce using rule 119
	END_LAYOUT     reduce using rule 119
	%eof           reduce using rule 119


State 190

	Just -> 'by' 'theorem' IDENT . OnIdents             (rule 120)

	IDENT          reduce using rule 137
	'theorem'      reduce using rule 137
	'on'           shift, and enter state 209
	'prove'        reduce using rule 137
	'⊤'            reduce using rule 137
	'⊥'            reduce using rule 137
	'∀'            reduce using rule 137
	'∃'            reduce using rule 137
	'¬'            reduce using rule 137
	'('            reduce using rule 137
	'['            reduce using rule 137
	'{'            reduce using rule 137
	'_'            reduce using rule 137
	BEGIN_LAYOUT   reduce using rule 137
	END_LAYOUT     reduce using rule 137
	%eof           reduce using rule 137

	OnIdents       goto state 208

State 191

	PropsAux -> PropVar ',' . PropsAux                  (rule 50)

	IDENT          shift, and enter state 10

	PropsAux       goto state 207
	PropVar        goto state 155

State 192

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' . Assumptions '⊢' Conclusion Proof    (rule 45)
	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' . Formula Proof    (rule 47)

	IDENT          shift, and enter state 10
	'⊢'            reduce using rule 52
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Assumptions    goto state 205
	Formula        goto state 206
	Relation       goto state 8
	PropVar        goto state 9

State 193

	Type -> Type . '->' Type                            (rule 75)
	Type -> Type '->' Type .                            (rule 75)

	','            reduce using rule 75
	')'            reduce using rule 75
	'->'           shift, and enter state 152
			(reduce using rule 75)



State 194

	Axs -> 'axiom' IDENT ':' Formula .                  (rule 18)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	'theorem'      reduce using rule 18
	'judgment'     reduce using rule 18
	'syntax'       reduce using rule 18
	'axiom'        reduce using rule 18
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	%eof           reduce using rule 18


State 195

	Jud -> 'judgment' IDENT . '=' Constructor Rules     (rule 32)

	'='            shift, and enter state 204


State 196

	Judgments -> Jud Judgments .                        (rule 30)

	'theorem'      reduce using rule 30
	%eof           reduce using rule 30


State 197

	Module -> 'module' ModuleName ConstantsD Aliases Axioms Syntax Judgments Theorems .    (rule 4)

	%eof           reduce using rule 4


State 198

	Syn -> 'syntax' PropVar Constructors .              (rule 21)

	'theorem'      reduce using rule 21
	'judgment'     reduce using rule 21
	'syntax'       reduce using rule 21
	%eof           reduce using rule 21


State 199

	Constructors -> '=' . Constructor ConstrsAux        (rule 22)

	IDENT          shift, and enter state 203

	Constructor    goto state 202

State 200

	Alis -> Alias ',' Alis .                            (rule 11)

	'theorem'      reduce using rule 11
	'judgment'     reduce using rule 11
	'syntax'       reduce using rule 11
	'axiom'        reduce using rule 11
	%eof           reduce using rule 11


State 201

	Alias -> Ali '=' Term .                             (rule 12)

	','            reduce using rule 12
	'theorem'      reduce using rule 12
	'judgment'     reduce using rule 12
	'syntax'       reduce using rule 12
	'axiom'        reduce using rule 12
	%eof           reduce using rule 12


State 202

	Constructors -> '=' Constructor . ConstrsAux        (rule 22)

	'theorem'      reduce using rule 27
	'judgment'     reduce using rule 27
	'syntax'       reduce using rule 27
	BEGIN_LAYOUT   shift, and enter state 233
	%eof           reduce using rule 27

	ConstrsAux     goto state 232

State 203

	Constructor -> IDENT .                              (rule 24)
	Constructor -> IDENT . '(' Type Types ')'           (rule 25)

	'theorem'      reduce using rule 24
	'judgment'     reduce using rule 24
	'syntax'       reduce using rule 24
	'rule'         reduce using rule 24
	'('            shift, and enter state 231
	BEGIN_LAYOUT   reduce using rule 24
	END_LAYOUT     reduce using rule 24
	%eof           reduce using rule 24


State 204

	Jud -> 'judgment' IDENT '=' . Constructor Rules     (rule 32)

	IDENT          shift, and enter state 203

	Constructor    goto state 230

State 205

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions . '⊢' Conclusion Proof    (rule 45)

	'⊢'            shift, and enter state 229


State 206

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Formula . Proof    (rule 47)
	Assumptions -> Formula . AssumpsRest                (rule 51)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          shift, and enter state 104
	','            shift, and enter state 105
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊢'            reduce using rule 54
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	%eof           reduce using rule 95

	AssumpsRest    goto state 97
	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 228
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 207

	PropsAux -> PropVar ',' PropsAux .                  (rule 50)

	':'            reduce using rule 50


State 208

	Just -> 'by' 'theorem' IDENT OnIdents .             (rule 120)

	IDENT          reduce using rule 120
	'theorem'      reduce using rule 120
	'prove'        reduce using rule 120
	'⊤'            reduce using rule 120
	'⊥'            reduce using rule 120
	'∀'            reduce using rule 120
	'∃'            reduce using rule 120
	'¬'            reduce using rule 120
	'('            reduce using rule 120
	'['            reduce using rule 120
	'{'            reduce using rule 120
	'_'            reduce using rule 120
	BEGIN_LAYOUT   reduce using rule 120
	END_LAYOUT     reduce using rule 120
	%eof           reduce using rule 120


State 209

	OnIdents -> 'on' . Idents                           (rule 136)

	IDENT          shift, and enter state 227

	Idents         goto state 226

State 210

	Just -> 'by' 'rule' RuleKind OnIdents .             (rule 116)

	IDENT          reduce using rule 116
	'theorem'      reduce using rule 116
	'prove'        reduce using rule 116
	'⊤'            reduce using rule 116
	'⊥'            reduce using rule 116
	'∀'            reduce using rule 116
	'∃'            reduce using rule 116
	'¬'            reduce using rule 116
	'('            reduce using rule 116
	'['            reduce using rule 116
	'{'            reduce using rule 116
	'_'            reduce using rule 116
	BEGIN_LAYOUT   reduce using rule 116
	END_LAYOUT     reduce using rule 116
	%eof           reduce using rule 116


State 211

	Just -> 'by' 'induction' ':' Cases .                (rule 117)

	IDENT          reduce using rule 117
	'theorem'      reduce using rule 117
	'prove'        reduce using rule 117
	'⊤'            reduce using rule 117
	'⊥'            reduce using rule 117
	'∀'            reduce using rule 117
	'∃'            reduce using rule 117
	'¬'            reduce using rule 117
	'('            reduce using rule 117
	'['            reduce using rule 117
	'{'            reduce using rule 117
	'_'            reduce using rule 117
	BEGIN_LAYOUT   reduce using rule 117
	END_LAYOUT     reduce using rule 117
	%eof           reduce using rule 117


State 212

	Cases -> Case . Cases                               (rule 122)

	IDENT          reduce using rule 123
	'theorem'      reduce using rule 123
	'case'         shift, and enter state 213
	'prove'        reduce using rule 123
	'⊤'            reduce using rule 123
	'⊥'            reduce using rule 123
	'∀'            reduce using rule 123
	'∃'            reduce using rule 123
	'¬'            reduce using rule 123
	'('            reduce using rule 123
	'['            reduce using rule 123
	'{'            reduce using rule 123
	'_'            reduce using rule 123
	BEGIN_LAYOUT   reduce using rule 123
	END_LAYOUT     reduce using rule 123
	%eof           reduce using rule 123

	Cases          goto state 225
	Case           goto state 212

State 213

	Case -> 'case' . Pattern '->' SubProofAux           (rule 124)

	IDENT          shift, and enter state 223
	'('            shift, and enter state 224

	Pattern        goto state 222

State 214

	Just -> 'by' 'case' 'analysis' 'on' . Term ':' Cases    (rule 121)

	IDENT          shift, and enter state 52
	'('            shift, and enter state 53

	Term           goto state 221

State 215

	Proof -> '_' PropVar ':=' Formula Proof .           (rule 93)

	'theorem'      reduce using rule 93
	END_LAYOUT     reduce using rule 93
	%eof           reduce using rule 93


State 216

	Assumption -> AssumedFormula 'for' 'some' Rigids .    (rule 101)

	'---'          reduce using rule 101


State 217

	Rigids -> TypeAnn1 ',' Rigids .                     (rule 109)

	'---'          reduce using rule 109


State 218

	TypeAnn1 -> '(' IDENT ':' . PropVar ')'             (rule 110)

	IDENT          shift, and enter state 10

	PropVar        goto state 220

State 219

	SubProofAux -> BEGIN_LAYOUT Assumption '---' Proof END_LAYOUT .    (rule 98)

	IDENT          reduce using rule 98
	'theorem'      reduce using rule 98
	'case'         reduce using rule 98
	'prove'        reduce using rule 98
	'⊤'            reduce using rule 98
	'⊥'            reduce using rule 98
	'∀'            reduce using rule 98
	'∃'            reduce using rule 98
	'¬'            reduce using rule 98
	'('            reduce using rule 98
	'['            reduce using rule 98
	'{'            reduce using rule 98
	'_'            reduce using rule 98
	BEGIN_LAYOUT   reduce using rule 98
	END_LAYOUT     reduce using rule 98
	%eof           reduce using rule 98


State 220

	TypeAnn1 -> '(' IDENT ':' PropVar . ')'             (rule 110)

	')'            shift, and enter state 247


State 221

	Just -> 'by' 'case' 'analysis' 'on' Term . ':' Cases    (rule 121)

	':'            shift, and enter state 246


State 222

	Case -> 'case' Pattern . '->' SubProofAux           (rule 124)

	'->'           shift, and enter state 245


State 223

	Pattern -> IDENT . 'ᶜ' PatVars                      (rule 125)
	Pattern -> IDENT . PatVars                          (rule 126)

	'ᶜ'            shift, and enter state 243
	'('            shift, and enter state 244
	')'            reduce using rule 129
	'->'           reduce using rule 129

	PatVars        goto state 242

State 224

	Pattern -> '(' . Pattern ')'                        (rule 127)

	IDENT          shift, and enter state 223
	'('            shift, and enter state 224

	Pattern        goto state 241

State 225

	Cases -> Case Cases .                               (rule 122)

	IDENT          reduce using rule 122
	'theorem'      reduce using rule 122
	'prove'        reduce using rule 122
	'⊤'            reduce using rule 122
	'⊥'            reduce using rule 122
	'∀'            reduce using rule 122
	'∃'            reduce using rule 122
	'¬'            reduce using rule 122
	'('            reduce using rule 122
	'['            reduce using rule 122
	'{'            reduce using rule 122
	'_'            reduce using rule 122
	BEGIN_LAYOUT   reduce using rule 122
	END_LAYOUT     reduce using rule 122
	%eof           reduce using rule 122


State 226

	OnIdents -> 'on' Idents .                           (rule 136)

	IDENT          reduce using rule 136
	'theorem'      reduce using rule 136
	'prove'        reduce using rule 136
	'⊤'            reduce using rule 136
	'⊥'            reduce using rule 136
	'∀'            reduce using rule 136
	'∃'            reduce using rule 136
	'¬'            reduce using rule 136
	'('            reduce using rule 136
	'['            reduce using rule 136
	'{'            reduce using rule 136
	'_'            reduce using rule 136
	BEGIN_LAYOUT   reduce using rule 136
	END_LAYOUT     reduce using rule 136
	%eof           reduce using rule 136


State 227

	Idents -> IDENT .                                   (rule 138)
	Idents -> IDENT . ',' IdentsAux                     (rule 139)

	IDENT          reduce using rule 138
	','            shift, and enter state 240
	'theorem'      reduce using rule 138
	'prove'        reduce using rule 138
	'⊤'            reduce using rule 138
	'⊥'            reduce using rule 138
	'∀'            reduce using rule 138
	'∃'            reduce using rule 138
	'¬'            reduce using rule 138
	'('            reduce using rule 138
	'['            reduce using rule 138
	'{'            reduce using rule 138
	'_'            reduce using rule 138
	BEGIN_LAYOUT   reduce using rule 138
	END_LAYOUT     reduce using rule 138
	%eof           reduce using rule 138


State 228

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Formula Proof .    (rule 47)

	'theorem'      reduce using rule 47
	%eof           reduce using rule 47


State 229

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' . Conclusion Proof    (rule 45)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Conclusion     goto state 239
	Formula        goto state 111
	Relation       goto state 8
	PropVar        goto state 9

State 230

	Jud -> 'judgment' IDENT '=' Constructor . Rules     (rule 32)

	'theorem'      reduce using rule 34
	'judgment'     reduce using rule 34
	'rule'         shift, and enter state 238
	%eof           reduce using rule 34

	Rules          goto state 236
	Rule           goto state 237

State 231

	Constructor -> IDENT '(' . Type Types ')'           (rule 25)

	IDENT          shift, and enter state 10

	Type           goto state 235
	PropVar        goto state 131

State 232

	Constructors -> '=' Constructor ConstrsAux .        (rule 22)

	'theorem'      reduce using rule 22
	'judgment'     reduce using rule 22
	'syntax'       reduce using rule 22
	%eof           reduce using rule 22


State 233

	ConstrsAux -> BEGIN_LAYOUT . Constructor ConstrsAux END_LAYOUT    (rule 26)

	IDENT          shift, and enter state 203

	Constructor    goto state 234

State 234

	ConstrsAux -> BEGIN_LAYOUT Constructor . ConstrsAux END_LAYOUT    (rule 26)

	BEGIN_LAYOUT   shift, and enter state 233
	END_LAYOUT     reduce using rule 27

	ConstrsAux     goto state 264

State 235

	Constructor -> IDENT '(' Type . Types ')'           (rule 25)
	Type -> Type . '->' Type                            (rule 75)

	','            shift, and enter state 263
	')'            reduce using rule 29
	'->'           shift, and enter state 152

	Types          goto state 262

State 236

	Jud -> 'judgment' IDENT '=' Constructor Rules .     (rule 32)

	'theorem'      reduce using rule 32
	'judgment'     reduce using rule 32
	%eof           reduce using rule 32


State 237

	Rules -> Rule . Rules                               (rule 33)

	'theorem'      reduce using rule 34
	'judgment'     reduce using rule 34
	'rule'         shift, and enter state 238
	%eof           reduce using rule 34

	Rules          goto state 261
	Rule           goto state 237

State 238

	Rule -> 'rule' . IDENT ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 35)
	Rule -> 'rule' . 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	IDENT          shift, and enter state 259
	'schema'       shift, and enter state 260


State 239

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion . Proof    (rule 45)

	IDENT          shift, and enter state 104
	'theorem'      reduce using rule 95
	'prove'        shift, and enter state 106
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 107
	BEGIN_LAYOUT   shift, and enter state 108
	%eof           reduce using rule 95

	Formula        goto state 98
	Relation       goto state 8
	PropVar        goto state 9
	Proof          goto state 258
	Subproof       goto state 100
	SubProofAux    goto state 101
	Claim          goto state 102
	Name           goto state 103

State 240

	Idents -> IDENT ',' . IdentsAux                     (rule 139)

	IDENT          shift, and enter state 257

	IdentsAux      goto state 256

State 241

	Pattern -> '(' Pattern . ')'                        (rule 127)

	')'            shift, and enter state 255


State 242

	Pattern -> IDENT PatVars .                          (rule 126)

	')'            reduce using rule 126
	'->'           reduce using rule 126


State 243

	Pattern -> IDENT 'ᶜ' . PatVars                      (rule 125)

	'('            shift, and enter state 244
	')'            reduce using rule 129
	'->'           reduce using rule 129

	PatVars        goto state 254

State 244

	PatVars -> '(' . PatVs ')'                          (rule 128)

	IDENT          shift, and enter state 253
	')'            reduce using rule 131

	PatVs          goto state 250
	PatVss         goto state 251
	PatV           goto state 252

State 245

	Case -> 'case' Pattern '->' . SubProofAux           (rule 124)

	BEGIN_LAYOUT   shift, and enter state 108

	SubProofAux    goto state 249

State 246

	Just -> 'by' 'case' 'analysis' 'on' Term ':' . Cases    (rule 121)

	IDENT          reduce using rule 123
	'theorem'      reduce using rule 123
	'case'         shift, and enter state 213
	'prove'        reduce using rule 123
	'⊤'            reduce using rule 123
	'⊥'            reduce using rule 123
	'∀'            reduce using rule 123
	'∃'            reduce using rule 123
	'¬'            reduce using rule 123
	'('            reduce using rule 123
	'['            reduce using rule 123
	'{'            reduce using rule 123
	'_'            reduce using rule 123
	BEGIN_LAYOUT   reduce using rule 123
	END_LAYOUT     reduce using rule 123
	%eof           reduce using rule 123

	Cases          goto state 248
	Case           goto state 212

State 247

	TypeAnn1 -> '(' IDENT ':' PropVar ')' .             (rule 110)

	','            reduce using rule 110
	'---'          reduce using rule 110


State 248

	Just -> 'by' 'case' 'analysis' 'on' Term ':' Cases .    (rule 121)

	IDENT          reduce using rule 121
	'theorem'      reduce using rule 121
	'prove'        reduce using rule 121
	'⊤'            reduce using rule 121
	'⊥'            reduce using rule 121
	'∀'            reduce using rule 121
	'∃'            reduce using rule 121
	'¬'            reduce using rule 121
	'('            reduce using rule 121
	'['            reduce using rule 121
	'{'            reduce using rule 121
	'_'            reduce using rule 121
	BEGIN_LAYOUT   reduce using rule 121
	END_LAYOUT     reduce using rule 121
	%eof           reduce using rule 121


State 249

	Case -> 'case' Pattern '->' SubProofAux .           (rule 124)

	IDENT          reduce using rule 124
	'theorem'      reduce using rule 124
	'case'         reduce using rule 124
	'prove'        reduce using rule 124
	'⊤'            reduce using rule 124
	'⊥'            reduce using rule 124
	'∀'            reduce using rule 124
	'∃'            reduce using rule 124
	'¬'            reduce using rule 124
	'('            reduce using rule 124
	'['            reduce using rule 124
	'{'            reduce using rule 124
	'_'            reduce using rule 124
	BEGIN_LAYOUT   reduce using rule 124
	END_LAYOUT     reduce using rule 124
	%eof           reduce using rule 124


State 250

	PatVars -> '(' PatVs . ')'                          (rule 128)

	')'            shift, and enter state 272


State 251

	PatVs -> PatVss .                                   (rule 130)

	')'            reduce using rule 130


State 252

	PatVss -> PatV . ',' PatVss                         (rule 132)
	PatVss -> PatV .                                    (rule 133)

	','            shift, and enter state 271
	')'            reduce using rule 133


State 253

	PatV -> IDENT .                                     (rule 134)

	','            reduce using rule 134
	')'            reduce using rule 134


State 254

	Pattern -> IDENT 'ᶜ' PatVars .                      (rule 125)

	')'            reduce using rule 125
	'->'           reduce using rule 125


State 255

	Pattern -> '(' Pattern ')' .                        (rule 127)

	')'            reduce using rule 127
	'->'           reduce using rule 127


State 256

	Idents -> IDENT ',' IdentsAux .                     (rule 139)

	IDENT          reduce using rule 139
	'theorem'      reduce using rule 139
	'prove'        reduce using rule 139
	'⊤'            reduce using rule 139
	'⊥'            reduce using rule 139
	'∀'            reduce using rule 139
	'∃'            reduce using rule 139
	'¬'            reduce using rule 139
	'('            reduce using rule 139
	'['            reduce using rule 139
	'{'            reduce using rule 139
	'_'            reduce using rule 139
	BEGIN_LAYOUT   reduce using rule 139
	END_LAYOUT     reduce using rule 139
	%eof           reduce using rule 139


State 257

	IdentsAux -> IDENT . ',' IdentsAux                  (rule 140)
	IdentsAux -> IDENT .                                (rule 141)

	IDENT          reduce using rule 141
	','            shift, and enter state 270
	'theorem'      reduce using rule 141
	'prove'        reduce using rule 141
	'⊤'            reduce using rule 141
	'⊥'            reduce using rule 141
	'∀'            reduce using rule 141
	'∃'            reduce using rule 141
	'¬'            reduce using rule 141
	'('            reduce using rule 141
	'['            reduce using rule 141
	'{'            reduce using rule 141
	'_'            reduce using rule 141
	BEGIN_LAYOUT   reduce using rule 141
	END_LAYOUT     reduce using rule 141
	%eof           reduce using rule 141


State 258

	Theorem -> 'theorem' 'schema' IDENT 'for' 'all' 'propositions' Props ':' Assumptions '⊢' Conclusion Proof .    (rule 45)

	'theorem'      reduce using rule 45
	%eof           reduce using rule 45


State 259

	Rule -> 'rule' IDENT . ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 35)

	':'            shift, and enter state 269


State 260

	Rule -> 'rule' 'schema' . IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	IDENT          shift, and enter state 268


State 261

	Rules -> Rule Rules .                               (rule 33)

	'theorem'      reduce using rule 33
	'judgment'     reduce using rule 33
	%eof           reduce using rule 33


State 262

	Constructor -> IDENT '(' Type Types . ')'           (rule 25)

	')'            shift, and enter state 267


State 263

	Types -> ',' . Type Types                           (rule 28)

	IDENT          shift, and enter state 10

	Type           goto state 266
	PropVar        goto state 131

State 264

	ConstrsAux -> BEGIN_LAYOUT Constructor ConstrsAux . END_LAYOUT    (rule 26)

	END_LAYOUT     shift, and enter state 265


State 265

	ConstrsAux -> BEGIN_LAYOUT Constructor ConstrsAux END_LAYOUT .    (rule 26)

	'theorem'      reduce using rule 26
	'judgment'     reduce using rule 26
	'syntax'       reduce using rule 26
	END_LAYOUT     reduce using rule 26
	%eof           reduce using rule 26


State 266

	Types -> ',' Type . Types                           (rule 28)
	Type -> Type . '->' Type                            (rule 75)

	','            shift, and enter state 263
	')'            reduce using rule 29
	'->'           shift, and enter state 152

	Types          goto state 277

State 267

	Constructor -> IDENT '(' Type Types ')' .           (rule 25)

	'theorem'      reduce using rule 25
	'judgment'     reduce using rule 25
	'syntax'       reduce using rule 25
	'rule'         reduce using rule 25
	BEGIN_LAYOUT   reduce using rule 25
	END_LAYOUT     reduce using rule 25
	%eof           reduce using rule 25


State 268

	Rule -> 'rule' 'schema' IDENT . 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	'for'          shift, and enter state 276


State 269

	Rule -> 'rule' IDENT ':' . BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 35)

	BEGIN_LAYOUT   shift, and enter state 275


State 270

	IdentsAux -> IDENT ',' . IdentsAux                  (rule 140)

	IDENT          shift, and enter state 257

	IdentsAux      goto state 274

State 271

	PatVss -> PatV ',' . PatVss                         (rule 132)

	IDENT          shift, and enter state 253

	PatVss         goto state 273
	PatV           goto state 252

State 272

	PatVars -> '(' PatVs ')' .                          (rule 128)

	')'            reduce using rule 128
	'->'           reduce using rule 128


State 273

	PatVss -> PatV ',' PatVss .                         (rule 132)

	')'            reduce using rule 132


State 274

	IdentsAux -> IDENT ',' IdentsAux .                  (rule 140)

	IDENT          reduce using rule 140
	'theorem'      reduce using rule 140
	'prove'        reduce using rule 140
	'⊤'            reduce using rule 140
	'⊥'            reduce using rule 140
	'∀'            reduce using rule 140
	'∃'            reduce using rule 140
	'¬'            reduce using rule 140
	'('            reduce using rule 140
	'['            reduce using rule 140
	'{'            reduce using rule 140
	'_'            reduce using rule 140
	BEGIN_LAYOUT   reduce using rule 140
	END_LAYOUT     reduce using rule 140
	%eof           reduce using rule 140


State 275

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT . Formulas '---' IDENT Formula END_LAYOUT    (rule 35)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19
	'---'          reduce using rule 41

	Formulas       goto state 279
	Formula        goto state 280
	Relation       goto state 8
	PropVar        goto state 9

State 276

	Rule -> 'rule' 'schema' IDENT 'for' . 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	'all'          shift, and enter state 278


State 277

	Types -> ',' Type Types .                           (rule 28)

	')'            reduce using rule 28


State 278

	Rule -> 'rule' 'schema' IDENT 'for' 'all' . 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	'object'       shift, and enter state 283


State 279

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas . '---' IDENT Formula END_LAYOUT    (rule 35)

	'---'          shift, and enter state 282


State 280

	Formulas -> Formula . Formulas                      (rule 40)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19
	'---'          reduce using rule 41

	Formulas       goto state 281
	Formula        goto state 280
	Relation       goto state 8
	PropVar        goto state 9

State 281

	Formulas -> Formula Formulas .                      (rule 40)

	'---'          reduce using rule 40


State 282

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas '---' . IDENT Formula END_LAYOUT    (rule 35)

	IDENT          shift, and enter state 287


State 283

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' . Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	'('            shift, and enter state 286

	Objects        goto state 284
	TypeAnn2       goto state 285

State 284

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects . ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	':'            shift, and enter state 291


State 285

	Objects -> TypeAnn2 .                               (rule 37)
	Objects -> TypeAnn2 . ',' Objects                   (rule 38)

	','            shift, and enter state 290
	':'            reduce using rule 37


State 286

	TypeAnn2 -> '(' . IDENT ':' PropVar ')'             (rule 39)

	IDENT          shift, and enter state 289


State 287

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas '---' IDENT . Formula END_LAYOUT    (rule 35)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 288
	Relation       goto state 8
	PropVar        goto state 9

State 288

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas '---' IDENT Formula . END_LAYOUT    (rule 35)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	END_LAYOUT     shift, and enter state 295


State 289

	TypeAnn2 -> '(' IDENT . ':' PropVar ')'             (rule 39)

	':'            shift, and enter state 294


State 290

	Objects -> TypeAnn2 ',' . Objects                   (rule 38)

	'('            shift, and enter state 286

	Objects        goto state 293
	TypeAnn2       goto state 285

State 291

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' . BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	BEGIN_LAYOUT   shift, and enter state 292


State 292

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT . Formulas '---' IDENT Formula END_LAYOUT    (rule 36)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19
	'---'          reduce using rule 41

	Formulas       goto state 297
	Formula        goto state 280
	Relation       goto state 8
	PropVar        goto state 9

State 293

	Objects -> TypeAnn2 ',' Objects .                   (rule 38)

	':'            reduce using rule 38


State 294

	TypeAnn2 -> '(' IDENT ':' . PropVar ')'             (rule 39)

	IDENT          shift, and enter state 10

	PropVar        goto state 296

State 295

	Rule -> 'rule' IDENT ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT .    (rule 35)

	'theorem'      reduce using rule 35
	'judgment'     reduce using rule 35
	'rule'         reduce using rule 35
	%eof           reduce using rule 35


State 296

	TypeAnn2 -> '(' IDENT ':' PropVar . ')'             (rule 39)

	')'            shift, and enter state 299


State 297

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas . '---' IDENT Formula END_LAYOUT    (rule 36)

	'---'          shift, and enter state 298


State 298

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' . IDENT Formula END_LAYOUT    (rule 36)

	IDENT          shift, and enter state 300


State 299

	TypeAnn2 -> '(' IDENT ':' PropVar ')' .             (rule 39)

	','            reduce using rule 39
	':'            reduce using rule 39


State 300

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT . Formula END_LAYOUT    (rule 36)

	IDENT          shift, and enter state 10
	'⊤'            shift, and enter state 11
	'⊥'            shift, and enter state 12
	'∀'            shift, and enter state 13
	'∃'            shift, and enter state 14
	'¬'            shift, and enter state 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	'{'            shift, and enter state 18
	'_'            shift, and enter state 19

	Formula        goto state 301
	Relation       goto state 8
	PropVar        goto state 9

State 301

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula . END_LAYOUT    (rule 36)
	Formula -> Formula . '∧' Formula                    (rule 60)
	Formula -> Formula . '∨' Formula                    (rule 61)
	Formula -> Formula . '==>' Formula                  (rule 62)
	Formula -> Formula . '<=>' Formula                  (rule 63)

	'∧'            shift, and enter state 38
	'∨'            shift, and enter state 39
	'==>'          shift, and enter state 40
	'<=>'          shift, and enter state 41
	END_LAYOUT     shift, and enter state 302


State 302

	Rule -> 'rule' 'schema' IDENT 'for' 'all' 'object' Objects ':' BEGIN_LAYOUT Formulas '---' IDENT Formula END_LAYOUT .    (rule 36)

	'theorem'      reduce using rule 36
	'judgment'     reduce using rule 36
	'rule'         reduce using rule 36
	%eof           reduce using rule 36


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 142
Number of terminals: 52
Number of non-terminals: 68
Number of states: 303

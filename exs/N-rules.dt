module ℕ


--  constants : Zero, Suc

syntax ℕ  = Zero
          | Suc(ℕ)


judgment Sum(ℕ, ℕ, ℕ) :

rule schema sum-zero for all objects (n : ℕ) :
|
|-------------------------------------- sum-zero
| Sum(Zero, n, n)


rule schema sum-suc for all objects (m : ℕ), (n : ℕ), (o : ℕ) :
| Sum(m, n, o)
|-------------------------------------- sum-suc
| Sum(Suc(m), n, Suc(o))




theorem totality : ∀ ℕ₁ ℕ₂ : ∃ ℕ₃ : Sum( ℕ₁ , ℕ₂ , ℕ₃ )
|
|--------------------------------------------------------------------------------------------------
|
| --  Let's prove the base case: { ∀ ℕ₂ : ∃ ℕ₃ : Sum( Zero , ℕ₂ , ℕ₃ ) }
|
| uni-n2 :  | for all ℕ2
|           |--------------------------------------------------------------------------------------
|           |
|           | sz : Sum( Zero , n2 , n3 )  by rule sum-zero
|           | ∃ ℕ₃ : Sum( Zero , n2 , ℕ₃ )  by rule ∃-intro on sz
|
| base : { ∀ ℕ₂ : ∃ ℕ₃ : Sum( Zero , ℕ₂ , ℕ₃ ) }  by rule ∀-intro on uni-n2
|
|
|
| --  Let's prove the inductive case: [ ∀ ℕ : { ∀ ℕ₂ : ∃ ℕ₃ : Sum( ℕ , ℕ₂ , ℕ₃ ) } ==> { ∀ ℕ₂ : ∃ ℕ₃ : Sum( Suc(ℕ) , ℕ₂ , ℕ₃ ) } ]
|
| uni-n : | for all ℕ
|         |----------------------------------------------------------------------------------------
|         |
|         | impl :  | p3 : ∀ ℕ₂ : ∃ ℕ₃ : Sum( ℕ , ℕ₂ , ℕ₃ )
|         |         |---------------------------------------------------------------------------------------------------------------------------------------
|         |         |
|         |         | uni-n2b : | for all ℕ2
|         |         |           |---------------------------------------------------------------------------------------------------------------------------
|         |         |           |  
|         |         |           | d1 : ∃ ℕ₃ : Sum( ℕ , ℕ2 , ℕ₃ )  by rule ∀-elim on p3
|         |         |           |
|         |         |           | exn3 :  | p5 : Sum( ℕ , ℕ2 , ℕ3 ) for some ℕ3
|         |         |           |         |---------------------------------------------------------------------------------------------------------
|         |         |           |         |
|         |         |           |         | sum-n1+1 : Sum( Suc(ℕ) , ℕ2 , Suc(ℕ3) )  by rule sum-suc on ℕ, ℕ2, ℕ3
|         |         |           |         | ∃ ℕ₃ : Sum( Suc(ℕ) , ℕ2 , ℕ₃ )  by rule ∃-intro on sum-n1+1
|         |         |           |
|         |         |           | ∃ ℕ₃ : Sum( Suc(ℕ) , ℕ2 , ℕ₃ )  by rule ∃-elim on d1, exn3
|         |         |
|         |         | ∀ ℕ₂ : ∃ n₃ : ℕ(n₃) ∧ Sum( Suc(ℕ) , ℕ₂ , n₃ )  by rule ∀-intro on uni-n2b
|         |
|         | { ∀ ℕ₂ : ∃ ℕ₃ : Sum( ℕ , ℕ₂ , ℕ₃ ) } ==> { ∀ ℕ₂ : ∃ ℕ₃ : Sum( Suc(ℕ) , ℕ₂ , ℕ₃ ) }  by rule ==>-intro on impl
|
| step : [ ∀ ℕ : { ∀ ℕ₂ : ∃ ℕ₃ : Sum( ℕ , ℕ₂ , ℕ₃ ) } ==> { ∀ ℕ₂ : ∃ ℕ₃ : Sum( Suc(ℕ) , ℕ₂ , ℕ₃ ) } ]  by rule ∀-intro on uni-n
|
|
| -- Let's use the induction now.
| ∀ ℕ₁ ℕ₂ : ∃ ℕ₃ : Sum( ℕ₁ , ℕ₂ , ℕ₃ )  by induction on base, step



